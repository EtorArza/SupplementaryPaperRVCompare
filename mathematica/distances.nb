(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    379863,       7104]
NotebookOptionsPosition[    375225,       7031]
NotebookOutlinePosition[    375903,       7055]
CellTagsIndexPosition[    375860,       7052]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "Fdiv", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"Fdiv", ",", "HoldAll"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"NIntegrate", "::", "izero"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"General", "::", "stop"}], "]"}], ";"}], "\n"}], "\n"}], "Input",
 CellChangeTimes->{{3.8235860991422048`*^9, 3.8235861104299393`*^9}, {
   3.823586852007106*^9, 3.823586852604141*^9}, {3.823587097181666*^9, 
   3.8235871214046817`*^9}, {3.8235939754615*^9, 3.8235939919674435`*^9}, 
   3.823863436615919*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"725fbfd1-f8e3-47b3-ab3f-b573d23d8b14"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"WorkingPrec", " ", "=", " ", "15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MaxRec", " ", "=", " ", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"integralLowerX", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"integralUpperX", " ", "=", " ", "0.4"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8237638858217883`*^9, 3.8237638938069572`*^9}, {
  3.823864486204111*^9, 3.82386451732531*^9}, {3.823865242517476*^9, 
  3.8238652427933407`*^9}, {3.823865285535962*^9, 3.82386529783887*^9}, {
  3.824275989552611*^9, 3.8242760354161367`*^9}, {3.824284262802108*^9, 
  3.8242842640322046`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"61d63873-500c-49e8-a66c-e90fdb9c34d7"],

Cell[BoxData["\n"], "Input",
 CellChangeTimes->{{3.823586078442998*^9, 3.8235861074860396`*^9}},
 CellLabel->
  "In[872]:=",ExpressionUUID->"70de4438-b064-4654-8dc4-73f47fd5b8b2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Fdiv", "[", 
    RowBox[{"Adensity_", ",", "Bdensity_", ",", "f_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"adivbyb", ",", "functiontointegrate"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"adivbyb", "[", "x_", "]"}], ":=", " ", 
       RowBox[{
        RowBox[{"Adensity", "[", "x", "]"}], " ", "/", " ", 
        RowBox[{"Bdensity", "[", "x", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"functiontointegrate", "[", "x_", "]"}], " ", ":=", " ", 
       RowBox[{"Expand", "[", 
        RowBox[{
         RowBox[{"Bdensity", "[", "x", "]"}], "*", 
         RowBox[{
          RowBox[{"Composition", "[", 
           RowBox[{"f", ",", "adivbyb"}], "]"}], "[", "x", "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "  ", "[", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{"functiontointegrate", "[", "x", "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "integralLowerX", ",", "integralUpperX"}], 
          "}"}], ",", 
         RowBox[{"WorkingPrecision", "\[Rule]", "WorkingPrec"}], ",", " ", 
         RowBox[{"MaxRecursion", "\[Rule]", "MaxRec"}]}], "]"}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"Expand", "[", 
       RowBox[{
        RowBox[{"Bdensity", "[", "x", "]"}], "*", 
        RowBox[{
         RowBox[{"Composition", "[", 
          RowBox[{"f", ",", 
           RowBox[{
            RowBox[{"Adensity", "[", "x", "]"}], "/", 
            RowBox[{"Bdensity", "[", "x", "]"}]}]}], "]"}], "[", "x", "]"}]}],
        "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "2"}], ",", " ", "2"}], "}"}]}], "]"}], ";"}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8235858369324346`*^9, 3.823585920762617*^9}, {
   3.8235861362988806`*^9, 3.823586142061457*^9}, {3.823586192370265*^9, 
   3.8235862335294247`*^9}, {3.8235863676654005`*^9, 
   3.8235863719069223`*^9}, {3.823586503045787*^9, 3.823586507427006*^9}, 
   3.8235867009178214`*^9, {3.8235868150577974`*^9, 3.823586846353367*^9}, {
   3.823586880238341*^9, 3.8235869485819645`*^9}, {3.823587057082802*^9, 
   3.8235870585879188`*^9}, {3.823587215819753*^9, 3.823587289948467*^9}, {
   3.823587623658517*^9, 3.8235877905903206`*^9}, {3.8235878938461366`*^9, 
   3.823587898572873*^9}, {3.823588128190709*^9, 3.823588156286806*^9}, 
   3.8235931784249563`*^9, {3.8235932344301863`*^9, 3.823593246145574*^9}, {
   3.8236089444180403`*^9, 3.8236089456540465`*^9}, {3.823763019086385*^9, 
   3.8237630200071926`*^9}, {3.8237636145876393`*^9, 
   3.8237636172294817`*^9}, {3.823764192857005*^9, 3.823764196654166*^9}, {
   3.8238644749368916`*^9, 3.8238644759587307`*^9}, 3.8238645076521254`*^9, {
   3.8238648974022713`*^9, 3.823864901624806*^9}, {3.824276041936757*^9, 
   3.8242760483373094`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"5de76da4-4da8-40d5-99f2-8f13700d6529"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.823763917535124*^9, 3.823763970045449*^9}},
 CellLabel->
  "In[874]:=",ExpressionUUID->"34ebe90e-6de6-4b98-ac3d-6cef444570ec"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.82376397277094*^9, 3.8237640427400384`*^9}, {
   3.8237641253296843`*^9, 3.8237641256595507`*^9}, {3.823786711855035*^9, 
   3.8237867119432106`*^9}, 3.823800258816857*^9, {3.823800323969696*^9, 
   3.823800325184764*^9}, {3.8238007046074047`*^9, 3.8238007070730295`*^9}, {
   3.823922759832251*^9, 3.823922763945856*^9}},
 CellLabel->
  "In[875]:=",ExpressionUUID->"2a5871fe-d581-4c86-85cb-f0cdac74cd22"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"EXP1", ":", " ", 
    RowBox[{"All", " ", "distances", " ", "except", " ", 
     RowBox[{"Wasserstein", "."}]}]}], "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"integralLowerX", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"integralUpperX", " ", "=", " ", "0.4"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"means", " ", "=", " ", 
     RowBox[{"Subdivide", "[", 
      RowBox[{"0.15", ",", "0.32", ",", " ", "20"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"std", " ", "=", " ", "0.005"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Adist", " ", ":=", " ", 
     RowBox[{"MixtureDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.0", ",", "0.1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "std"}], "]"}], ",", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "13", "]"}], "]"}], ",", 
           RowBox[{"std", "/", "2"}]}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Bdist", " ", ":=", " ", 
     RowBox[{"MixtureDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.5", ",", "0.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", "std"}], "]"}], ",", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "15", "]"}], "]"}], ",", "std"}], "]"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Cdist", " ", ":=", " ", 
     RowBox[{"MixtureDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.0", ",", "0.1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "5", "]"}], "]"}], ",", "std"}], "]"}], ",", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "17", "]"}], "]"}], ",", 
           RowBox[{"std", "/", "2"}]}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ddist", " ", ":=", 
     RowBox[{"MixtureDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.0", ",", "0.1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "17", "]"}], "]"}], ",", "std"}], "]"}], ",", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "5", "]"}], "]"}], ",", 
           RowBox[{"std", "/", "2"}]}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Adensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{"Adist", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Bdensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{"Bdist", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Cdensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{"Cdist", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Ddensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{"Ddist", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Acum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{"Adist", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Bcum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{"Bdist", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Ccum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{"Cdist", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Dcum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{"Ddist", ",", "x"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8237643702608814`*^9, 3.8237643713889384`*^9}, 
   3.8239225929776707`*^9, {3.8239226824895887`*^9, 3.8239227302218795`*^9}, {
   3.823922771596078*^9, 3.823922784870782*^9}, {3.8239232963706646`*^9, 
   3.823923351889074*^9}, {3.824275221513468*^9, 3.8242752250399065`*^9}, 
   3.8242757110870094`*^9, {3.824276128437354*^9, 3.824276137470188*^9}, {
   3.824279560283141*^9, 3.8242795697438602`*^9}, 3.824282537663026*^9, {
   3.824301090348866*^9, 3.8243010907938824`*^9}, 3.824301467938863*^9},
 CellLabel->
  "In[294]:=",ExpressionUUID->"45ab569f-e364-42e6-a3ab-2568acf6f9d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"EXP2", ":", " ", 
    RowBox[{"Wasserstein", " ", "distance"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"integralLowerX", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"integralUpperX", " ", "=", " ", "0.4"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"means", " ", "=", " ", 
     RowBox[{"Subdivide", "[", 
      RowBox[{"0.15", ",", "0.32", ",", " ", "10"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"std", " ", "=", " ", "0.005"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nearnessAD1", " ", "=", " ", "0.85"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nearnessAD2", " ", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Adist", " ", ":=", " ", 
     RowBox[{"MixtureDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.2", ",", "1.0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "nearnessAD1"}], ")"}], "*", 
             RowBox[{"means", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], " ", "+", " ", 
            RowBox[{"nearnessAD1", "*", 
             RowBox[{"(", 
              RowBox[{"means", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ")"}]}]}], ",", "std"}], "]"}],
          ",", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "nearnessAD2"}], ")"}], "*", 
             RowBox[{"means", "[", 
              RowBox[{"[", "4", "]"}], "]"}]}], " ", "+", " ", 
            RowBox[{"nearnessAD2", "*", 
             RowBox[{"(", 
              RowBox[{"means", "[", 
               RowBox[{"[", "6", "]"}], "]"}], ")"}]}]}], ",", "std"}], 
          "]"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Bdist", " ", ":=", " ", 
     RowBox[{"MixtureDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.0", ",", "1.0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", "std"}], "]"}], ",", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "6", "]"}], "]"}], ",", "std"}], "]"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Cdist", " ", ":=", " ", 
     RowBox[{"MixtureDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.0", ",", "1.0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "4", "]"}], "]"}], ",", "std"}], "]"}], ",", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "5", "]"}], "]"}], ",", "std"}], "]"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ddist", " ", ":=", 
     RowBox[{"MixtureDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.0", ",", "1.2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "nearnessAD2"}], ")"}], "*", 
             RowBox[{"means", "[", 
              RowBox[{"[", "5", "]"}], "]"}]}], " ", "+", " ", 
            RowBox[{"nearnessAD2", "*", 
             RowBox[{"(", 
              RowBox[{"means", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ")"}]}]}], ",", "std"}], "]"}],
          ",", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "nearnessAD1"}], ")"}], "*", 
             RowBox[{"means", "[", 
              RowBox[{"[", "8", "]"}], "]"}]}], " ", "+", " ", 
            RowBox[{"nearnessAD1", "*", 
             RowBox[{"(", 
              RowBox[{"means", "[", 
               RowBox[{"[", "6", "]"}], "]"}], ")"}]}]}], ",", "std"}], 
          "]"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Adensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{"Adist", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Bdensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{"Bdist", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Cdensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{"Cdist", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Ddensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{"Ddist", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Acum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{"Adist", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Bcum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{"Bdist", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Ccum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{"Cdist", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Dcum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{"Ddist", ",", "x"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.823584509416785*^9, 3.8235845648377705`*^9}, 
   3.823584702818652*^9, {3.823584809326368*^9, 3.8235848357522697`*^9}, {
   3.823584895240902*^9, 3.8235848984662886`*^9}, {3.823585307877451*^9, 
   3.823585313819482*^9}, {3.8235888462067995`*^9, 3.8235888616914525`*^9}, 
   3.823588900402532*^9, {3.82358895794856*^9, 3.823588958061695*^9}, {
   3.82359309082038*^9, 3.8235931199755745`*^9}, {3.823593295211877*^9, 
   3.82359330055447*^9}, 3.823596279930019*^9, {3.8235975878148375`*^9, 
   3.8235975882374945`*^9}, {3.823597652857766*^9, 3.823597703928649*^9}, {
   3.8235977817387624`*^9, 3.823597864957419*^9}, {3.8235978958217735`*^9, 
   3.823597905500677*^9}, {3.8235979889153104`*^9, 3.823597991467946*^9}, {
   3.8235984337965546`*^9, 3.82359843582596*^9}, {3.823598564684556*^9, 
   3.8235986282384043`*^9}, {3.8235986981855907`*^9, 
   3.8235988662400703`*^9}, {3.8236012302577543`*^9, 
   3.8236012680383368`*^9}, {3.82360134102973*^9, 3.823601342298884*^9}, {
   3.8236014032012887`*^9, 3.8236014148368754`*^9}, 3.8236023508950076`*^9, {
   3.823608784272071*^9, 3.8236087845403147`*^9}, {3.8236089286460886`*^9, 
   3.823608933786225*^9}, {3.823762933846905*^9, 3.823763004351322*^9}, {
   3.8237631403969407`*^9, 3.823763140886731*^9}, {3.823763184736084*^9, 
   3.82376319679638*^9}, {3.8237633387934666`*^9, 3.8237633404623747`*^9}, {
   3.8237637073789787`*^9, 3.8237637290684032`*^9}, {3.823763775268509*^9, 
   3.823763822856123*^9}, {3.823764047932885*^9, 3.8237641322842927`*^9}, {
   3.823764374342497*^9, 3.8237644068174944`*^9}, 3.823784824633482*^9, {
   3.8237867270751624`*^9, 3.823786732369377*^9}, 3.8237986875945587`*^9, {
   3.8237987195949254`*^9, 3.823798725224311*^9}, {3.8237990726840253`*^9, 
   3.8237990751762247`*^9}, {3.8237994919693584`*^9, 3.823799495085188*^9}, {
   3.8237995866233788`*^9, 3.8237996714155416`*^9}, {3.8237997015790124`*^9, 
   3.8237997082191153`*^9}, {3.823799742043602*^9, 3.823799748171957*^9}, {
   3.8237997876478567`*^9, 3.8237997959286146`*^9}, {3.8237999206991587`*^9, 
   3.823799932485984*^9}, {3.823799980086378*^9, 3.8237999819142704`*^9}, {
   3.823800023907572*^9, 3.823800045772828*^9}, {3.8238001091857247`*^9, 
   3.8238001275527754`*^9}, {3.823800279493739*^9, 3.8238003217790947`*^9}, 
   3.8238003957184896`*^9, {3.823800753141079*^9, 3.823800779882784*^9}, {
   3.8238008296012397`*^9, 3.8238008691744237`*^9}, {3.8238010918639894`*^9, 
   3.8238011507338734`*^9}, {3.8238012404224777`*^9, 
   3.8238013200881863`*^9}, {3.82380137001511*^9, 3.8238013755680275`*^9}, {
   3.823922711540515*^9, 3.8239227215101604`*^9}, {3.8239227780424542`*^9, 
   3.8239229006095953`*^9}, {3.8239233574629602`*^9, 
   3.8239233578936214`*^9}, {3.8239235625168004`*^9, 
   3.8239236491337523`*^9}, {3.8239237043048873`*^9, 3.823923710207348*^9}, 
   3.8239238387451715`*^9, {3.823924040503278*^9, 3.823924067455158*^9}, {
   3.8239240994655724`*^9, 3.8239241146669617`*^9}, {3.8239241757014275`*^9, 
   3.82392418231481*^9}, {3.8239242248311563`*^9, 3.823924227263181*^9}, {
   3.823924303052889*^9, 3.8239243057339616`*^9}, {3.8239245902484694`*^9, 
   3.8239246046865406`*^9}, {3.823925198138434*^9, 3.823925231197487*^9}, {
   3.823925284220128*^9, 3.8239252869271326`*^9}, {3.8239253875682807`*^9, 
   3.82392540176417*^9}, {3.8239255248180275`*^9, 3.8239255267136145`*^9}, {
   3.8239255802343254`*^9, 3.823925591944194*^9}, 3.823925641318889*^9, {
   3.8239256971039734`*^9, 3.82392569948903*^9}, 3.823925999661626*^9, {
   3.823926189048924*^9, 3.8239262714357967`*^9}, {3.8239263290100956`*^9, 
   3.823926331175152*^9}, {3.8239275754080963`*^9, 3.823927601827009*^9}, {
   3.8239278442182465`*^9, 3.8239278447552605`*^9}, {3.823927887570445*^9, 
   3.8239278933935666`*^9}, {3.824275228199993*^9, 3.8242752303103905`*^9}, {
   3.824301094369218*^9, 3.8243010971323824`*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"8c4f10d7-ad82-41a7-85bc-8286cb598394"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"EXP3", ":", " ", 
   RowBox[{
   "See", " ", "the", " ", "variation", " ", "to", " ", "translation", " ", 
    RowBox[{"etc", "."}]}]}], " ", "*)"}]], "Input",
 CellLabel->
  "In[906]:=",ExpressionUUID->"5f8e94d7-a592-4389-a87b-cddf6d57458f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Original", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"integralLowerX", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"integralUpperX", " ", "=", " ", "0.37"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"means", " ", "=", " ", 
     RowBox[{"Subdivide", "[", 
      RowBox[{"0.15", ",", "0.32", ",", "20"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"std", " ", "=", " ", "0.005"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Adist", " ", ":=", " ", 
     RowBox[{"MixtureDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.0", ",", "0.1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "5", "]"}], "]"}], ",", 
           RowBox[{"std", "*", "4"}]}], "]"}], ",", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "13", "]"}], "]"}], ",", 
           RowBox[{"std", "*", "2"}]}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Bdist", " ", ":=", " ", 
     RowBox[{"MixtureDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.5", ",", "0.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", "std"}], "]"}], ",", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "15", "]"}], "]"}], ",", "std"}], "]"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Cdist", " ", ":=", " ", 
     RowBox[{"GammaDistribution", "[", 
      RowBox[{"15", ",", "0.013"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"uniformLower", " ", "=", "integralLowerX"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"uniformUpper", " ", "=", " ", "integralUpperX"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ddist", " ", ":=", 
     RowBox[{"UniformDistribution", "[", 
      RowBox[{"{", 
       RowBox[{"uniformLower", ",", " ", "uniformUpper"}], "}"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Adensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{"Adist", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Bdensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{"Bdist", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Cdensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{"Cdist", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Ddensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{"Ddist", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Acum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{"Adist", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Bcum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{"Bdist", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Ccum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{"Cdist", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Dcum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{"Ddist", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"plot", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Acum", "[", "x", "]"}], ",", 
        RowBox[{"Bcum", "[", "x", "]"}], ",", 
        RowBox[{"Ccum", "[", "x", "]"}], ",", 
        RowBox[{"Dcum", "[", "x", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", "0.0", ",", "0.37"}], "}"}], ",", " ", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\"", ",", " ", 
         "\"\<D\>\""}], "}"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<Cumulative Probability\>\""}], 
        "}"}]}]}], "]"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8242825536892605`*^9, 3.8242826024320407`*^9}, {
   3.8242833032621293`*^9, 3.824283329569956*^9}, {3.824283961832877*^9, 
   3.8242839807844763`*^9}, {3.8242841438742013`*^9, 
   3.8242842012953672`*^9}, {3.824284234309306*^9, 3.824284242190727*^9}, {
   3.8242842773932495`*^9, 3.8242842913384933`*^9}, {3.8242850416142426`*^9, 
   3.824285049605484*^9}, {3.824285099766684*^9, 3.824285118138102*^9}, {
   3.8242852850249414`*^9, 3.8242852913454585`*^9}, {3.8242854527754335`*^9, 
   3.8242854541164303`*^9}, {3.8242861217944374`*^9, 3.824286131017301*^9}, {
   3.8242865729251614`*^9, 3.8242865737840595`*^9}, 3.8242866732358875`*^9, 
   3.8242867130769143`*^9},
 CellLabel->
  "In[255]:=",ExpressionUUID->"13ec1acb-c98f-4fa0-b09e-70265fdcfdc4"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9TgxlP6f/x/rnNUU
          "]]}, Annotation[#, "Charting`Private`Tag$582003#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxN2Hk8VNH/OH5bki27ylJKKktJiJh5IaJIQhtKlkSkkLQha1JCQmmnZEuI
knU2Zqyz2JcMQghjzxa/M+/v5/F+//zj8Xzce88957Wcc1FwvmZ9iYuDg+MG
NwcH+/d1x6cfDx40wIa8aJlanFUTygzAHR2olAPTaP7rUUsgdLGvzyutUg1C
+oUoRhtPCukl+a6GVmJgjzvlfLOLn1Dm5CGyb+Vx8Mp049w0WCzUK/c2+0rl
eRgcXfZI5jEWvqtJf+1WeRXWZcptcvI7s7EGRpNcKwNh70ijmPJnf9F/t7UH
s9eewPryu3KyRb8kPz1htQusT4ZHlyfJWiOMzbSkrp9+7m8ge5/cvMipILl3
ZU3rOLTSwD5WUub3USMFpft+mc5T6bC3e8Rs7UCCYsoL9k8mXPFP8X++eXQX
VT3Mqe1fFsjoPBi+1j+zq7isZ/elv7lgKeawLfiUkMotoTsVpqfzQTL+ZtHp
25VqSl/LpgfPfoUvhn0HNpX6qS8bOly11i0CnecVJ+65kDWuVby/Zi7yHSYO
XzbL/dKr6b9/673jG3/ATTvLVcXySe3UmMVGubESeKdw8bbUoSwd514B1b+T
ZfDpiiwpXcLmEGEbSeT8WAWInHJZF0Ip03P3v96Hn6kAk8GgK7tJeD3hWtkC
peUKiCFF5VD/VOnZ+fnbTG6ohJfewQo2mTS9mSqlpLBdlRDt+W/Ua/svPUXP
hzJZzpVQcGHe3TSVTz+iyFLpb3sltD6NL5yIstZX5V+et++thC1c3+w4w0/r
My58IuN+V8LMcS3jq6ft9eX5ODyi5ytB8WZ+2Xd5V337z+0twvw4sMvxcPbO
8tefWXu4KXUXDrrMb0WoRT7XP6Lce99WBQcqPFsnA2Ne66fYao/w7sOBTKu/
7Kb69/oGmf0/PLVxEPLxwrs75Ez9hCad7fKHcFB3lphazPFFf+jfk2gaBgc7
n+yNFU0t0H9srWevZYKDbGM4VtpXos+8F0/8bYaDuCV3KkUBp6/x6bdKigUO
LmoIminZEfUj6JhnFlY4iM3kx0lpkvXblxNWVm1woKhc8jG7sU5fRWnUNf8M
DlLmDmW4f6LpB1kZNLjY4+Cgk0jt/skmffqdJC0pRxysEMzlS7ra9BU/jr2m
OOPg4WZN+aGobn1XOLOpzg0Hsme23Qmx6tP/0IF/2nAFByKF/76urA3oD/ip
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
v05Z99X4vuf/3JVd5SuR+z//f1dv8C0=
          "]]}, Annotation[#, "Charting`Private`Tag$582003#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV13c4V+8bB3Aa6quSMpJoKA17JuVz3pGiVFZSKiR7J5SRHZG9svfee2+K
kL1KpUQofIiMMn6f3/njnOt1Pec593mu+76e+5xjWmZKOluoqKheUU7/v5pr
BCaLiV0kpiKcQuPOUXGlP627OlbLDoG8MP3leGoxzW/fjBNreeFY7fh73nZe
7EKoxYZLLQlmp1QURAW/nUufO99sUXsDdzm7nJcTusS/ssdmGtY+gBx98czQ
mdrzdiLd0bq1JnCcUxO6qJp54R1+hmrXPkedGPdgz+4QiYhrZY+0LzrgbhXv
+0+DERKGKu4C2vUOGOaeylPaFS+x24ij9VGjIxhk9Byoz2RKzJ5/1ibI4YTn
ppOTz3flS6heHMnP13JCiuTX2+8UiiXqLl8JE0x0wkj4xKmPfhUSp+WyHfK/
O+HfrdoLgg51Ev4KjDqCJ5yxYtMg8cGgSWJVxU4uX9sZN9wGWE7zv5PQujcq
KJjsjN6iTsnxlQ6JVs2rLPnjzpBs7W4qXOuRENLN2xA46QIH9d/vR0UHJSKM
Dozn6bqA7sde2bBrnyS2PHZoE0h1wRYxBr1YwW8SRtbj+XkTLni6n5bNZnBM
os/uepjAaVc0FMYyEEJTEhLOhQ55+q5w4CIllT2clUhyZ9URSHeFWnpz1f3L
vyV2ezvL5U25wujH3as/fv2RsAyYFBTgcgO/s7D8FtJfic+h8ix5hm6osKp9
Rb61KXElqmSDP9MNf7TTZ+kztpBy4tnHc3+5wXhTzGuSn4bEnOrWxs/zAiWH
rgtdV6QlOWb9ys81fgHF8vy9wSf3kibzlcL4s1/Ahf/waIPOfpJCablD7swL
XE3o4f2Wy0Qqqzqqw8/njhxZxjNxrgdJRxs85HJN3cFtUWto8Ied9LJ5VpA/
1x2XX61/4fc9RppvV2HJJbtD9KrL/B3PEyS1nqoNPgEPdPMTS3//niI1DB4f
zzH3wP6jXJtvF7hJXJ+92vjyPeC45t11+ZIAKXB0Pj9n3gPTt/jXz40Jkf5O
3AnjE3qJ1HvjGnGToqRHM7UOORYvca784VTPA3FS+++TOnyFLzFudsS6UYlE
ElnxkctZeAmpjwH2zNMXSVHri4J8Ip6Q2bai89DpEmn71vssOZaeaB+0ryow
v0Iy3dm4wVvsiU67Ad6clqukgT1c49l/PJF2xenCtZAbJIIhoI33rBeKnWzP
2/xWIKWwrORnW3uhaGry3sAjZRLdYY0w3lIviM+cGYo7dZv09Phbh+xlL9hy
nTAukrlL+nqaV4f33CsQcryH1jruk2T5guWyn70Cp8KvnW+1NUl5wv8Eectf
YaD66ZB6ghaJRVyLJXv1FZi/by6knNIhORHvNnjOeyO0Rntb7ZoeaeqSwHiW
rTecr3yPjeQyIildfd3GU+mNj7f2mLNUmpIqbm7kZ/3zxkTrVhP3+49JHLd0
wngkfFDx2vaYYNgT0qu77Q5Z9j5IIha2Mx+wJi2qC+vwVPug/yBdvubXZ6T7
2hFyWeuU8fV1p+l/dqQmA2ohHsIXEfWq7soWjiQeM32WLAdf1I+6STumOJOC
LTs3uGt9UfU8lO1Qmytp3ebseOamL3ZIneiM4HEnebEZBI9f8EOhxslZpoSX
JJbayEtHnvnBekOh3kD1FSn5YcfvO0V+oGVvp7NW8iUJbaNOCJzzQ7Hrpm5b
uz9Jszf8tC6zPwyO3YwZCA8kpZwQpnIV8cf5LxWNjMHBpBmr9sFYJX8o+77w
8KoNJYk06+RWmfvjnxxdmu/RcJIty6b7B19/xP97UtVZGUmqNwhTX8ryh+nU
f2pqoTGknZWCZxna/HHOO7O982Mc6ebutj0CU/44SN2wWe2XQAp5oD1+fUcA
ckJS9Y+YJJE+5axXGXAGgJPZ6Ocd6xSSgaKAceLDAPz3OHlC6FAmKS/h3aU6
xwBokyyC/9Rkk5YWtA59jg5AtCszi5l8Hol0ee33amUADK3ei3wfySe5hYa0
Mn8MwHmip9s8qJDUOsGXILwSgCp8v/3NuJi0T7zFRoE5EC2t8T8EzEpJMcN/
T3spBSJ0160o03+VpDGeYKpU80Bk65sJmXvXkLgdeIcafQPxW+WgHTLqSBad
b3O/ZgWCe18e1Rh3A6nsqKbHemsgwnneOGm+byRtPl5VZ50KRC/5jQxzwBvS
lcbAs2I7glBxkEvTz6aZ1KvzZtz8UhD2F5/5+b6xjcRaql7t8zAIw2vv73ty
d5A0d64EZzgGQWrP3Za1h12k1LsBxs3RQaBmvKJ9o6WbNJvBJT1WGYRm0Rae
gGu9JJG1xkPUH4PQdbViru5nH8nuxoMF9pUgNLWyKv3JGCDtnPNLUBUJRoZz
CZ4FfyTdlDxja6kUjJ2f9tqnNnwihQQ2KAaYByPc7lhWHOsI6dP3e2dyfIMx
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
AQBO4os=
          "]]}, Annotation[#, "Charting`Private`Tag$582003#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXRA/aam5uYMdAxSsLD/g+WS/rD2Mn/DwYc7i/bpw
vvW0on9N+23h/JUfrI4X7feF8x/Izl+dtT8Wzq82uTg3bX8unH/S/tW0lP21
cP7fSrOnq//3wfnL+97f4GafDudfmHb7bnHGPDh/wZ7LrAymi+F8tYbilUkf
l8H5L/YF10xhXA7nr/5r7H9MEME3qP7yRdMIwbcuK3X4WITgB+SUX6//guBX
RVSzzv2+As63mR594xz7Sjj//1Xr1QwSCH5L8J+AFAsEv9+vdo52JYIf1Bub
H9uJ4J/7dnqDUheCDwBZUWV2
          "]], 
         LineBox[CompressedData["
1:eJwVj3s01AkcxTU2p0TJllMeeaUXwlYybc3dovKsRZ6VTl5TKDKrOprS0GN1
0G4elSny2tkxlSWOMTE7HkOGPAbz05RHJKmZfqJUCjv7x/fc8z333M891zQ4
2iuMoqamtl91/2v4dnqiDpcLUdC+2pb1Dsh2mR2dqOJC7SKXJt7tgkO/9wtW
S7h44qic9Z/ygnGTMNVXzsXHpstB7S4BKHRK2CSYVv3054uDvgSDnnREQ6FZ
DM1iDm2lWTg21OGZkUExTBSMk91ux1ECtQTWz8XQj9Fqc82NhmAbS+LMVPnV
OY0G5qfRbpt0lJgpht7Q6K4fwliYzbl3q0abh+B6YrLWMhEbtYXtBUY8CAqb
ChMmEpE29mVHzA4eIugcjW8Jl+Cef1J/4XkeShXhkg/ZVyH5MbBr23ce/D+P
eA50pKJhynZ3zvR97NGItT28KhP86v51YZ8fQqjNNzYU38NZ7XjhXt9SWHfH
h/9y8D7WPKqeGPF/BFlJalZbXDm+7Tx0wotaAdt9okxTbwGihXnRbjqVSK2K
6o9bKEKcnTHTY0kV9tSMLx1bW4/81K9tRgoBPJRh6e91GhE8uMjq83g1bqdJ
Nyc6NKPOpEHnsEIIG8ZPEZ6erVhdpLj7JFgEnUtJyrLN7bDdku5AD6mFgXq4
s6dlJzqox6YUXnXwkVN23siToooaQD3jWw+7CLaL/tZuxNoaifb6NKCMbW34
i7gHQvaSiLldYgSE8JeXOBDwpqy6/dipEfnDNOOwll6c6wt8F7SlCUuma/aH
OsrBKIlgOZs+gXmZveu88ucoZ2bdsTdthtyMd2DEsQ/JwnH5Ih0JKtavuKJb
1Q/Ot/CcEd0WZP8mCqlfM4hMm3+K5i9thVXRqePuykHo9a7t0JpthdQklxL/
10sMnnucsGLuKZrOSszdoodAyzjvtYhsQ6dBbK9owzCiCnSPO8nb8eC6Xuzl
oWF8kB2l1EZ14NkAP13JfYXTWZ1Hu4Y7sPIc4TwdMoJc73b1N6Gd4E5MXi62
fg1dt9CtMX2dcK9I8Z0bew1lzVAK21uKemczrYL8UURtJFc3d0mRzK9weRvx
Blue3dgX4daFEIZYX2YxhnxWg0D7aRdSNbsYYeNjOFM04HzAvRvXYvtKHSvf
Ikv9xrHF9d1gW4QmNca8Q+ARqUTi2IOZ8jcvFFQF6J+4wunHPTh1fay58pMC
LzQiu5/aycDfNsrufKDE1HKBVUGpDJ51Q5/S4t6r8vf0FOsIzGQEDo/bkEj5
qMNXsyRgcCHb2G4TCWEyK2C5NQEqXX7wlD0Js/LgOzQ7AnHUwO4P20m8XWBh
9ieVwPu+APGEC4n4Mq61vSuBgTUBnI8hJLLnP3K6GEmglu8X+eUmidZs89cZ
J1R+3k2OA5vErE3GVW60qv8aMXw2h0RwYJxEylD1HfY79LWQxIaSrb9aMAmU
zfPzmC4lIfCvPihJIVDg6mvzvYWEQmk105+m4m/KitzeTmJV0t2cyT9UfEMZ
hyklkfjgwkvDTNUe0sdkppeEK2UnPfougYx0n6WzIySYN0sXXMpV8ZmZHrQx
Eg+tzIpv5RHoCOtJvqAgoeunrqwtIqDl4EOZmyDhpGCkyTgELE0zaZgicZr1
yuYdl4CLZk98wlcSf+v5dM7xCNAnl1X++53Ec544dtlDAldeHJicmyPxH9BO
iYw=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$582003#4"]& ], {}}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\"Cumulative Probability\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 0.37}, {0., 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"A\"", "\"B\"", "\"C\"", "\"D\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.824284161898691*^9, 3.8242842037839313`*^9}, {
   3.8242842371536784`*^9, 3.824284244695318*^9}, {3.8242842797225895`*^9, 
   3.824284293773264*^9}, 3.8242851210889187`*^9, 3.824285164185159*^9, {
   3.824285293848681*^9, 3.8242853046609197`*^9}, 3.824285359362898*^9, 
   3.8242861349804893`*^9, 3.8242865759485645`*^9, {3.824286697271905*^9, 
   3.8242867306369905`*^9}, {3.8242868235351267`*^9, 3.82428685098993*^9}, 
   3.824288646204563*^9, 3.8243011078403215`*^9, 3.8243013065902543`*^9},
 CellLabel->
  "Out[273]=",ExpressionUUID->"1c23e45f-9db2-4bb5-811a-02f97a6ea60f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Translation", " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"integralLowerX", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"integralUpperX", " ", "=", " ", "0.37"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lambda", " ", "=", " ", "0.025"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"means", " ", "=", " ", 
     RowBox[{"Subdivide", "[", 
      RowBox[{"0.15", ",", "0.32", ",", "20"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"std", " ", "=", " ", "0.005"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Adist", " ", ":=", " ", 
     RowBox[{"MixtureDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.0", ",", "0.1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "5", "]"}], "]"}], ",", 
           RowBox[{"std", "*", "4"}]}], "]"}], ",", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "13", "]"}], "]"}], ",", 
           RowBox[{"std", "*", "2"}]}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Bdist", " ", ":=", " ", 
     RowBox[{"MixtureDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.5", ",", "0.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", "std"}], "]"}], ",", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "15", "]"}], "]"}], ",", "std"}], "]"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Cdist", " ", ":=", " ", 
     RowBox[{"GammaDistribution", "[", 
      RowBox[{"15", ",", "0.013"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"uniformLower", " ", "=", "integralLowerX"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"uniformUpper", " ", "=", " ", "integralUpperX"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ddist", " ", ":=", 
     RowBox[{"UniformDistribution", "[", 
      RowBox[{"{", 
       RowBox[{"uniformLower", ",", " ", "uniformUpper"}], "}"}], "]"}]}], 
    ";", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "No", " ", "need", " ", "to", " ", "change", " ", "the", " ", "bounds", 
       " ", "here"}], ",", " ", 
      RowBox[{
      "we", " ", "change", " ", "the", " ", "distribution", " ", "in"}]}], 
     " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Adensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "+", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Adist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Bdensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "+", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Bdist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Cdensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "+", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Cdist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Ddensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "+", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Ddist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Acum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "+", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Adist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Bcum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "+", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Bdist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Ccum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "+", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Cdist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Dcum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "+", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Ddist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"integralLowerX", " ", "=", " ", 
     RowBox[{"integralLowerX", " ", "+", " ", "lambda"}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"change", " ", "this", " ", "after", " ", "D", " ", 
       RowBox[{"(", "uniform", ")"}], " ", "is", " ", "defined"}], ",", " ", 
      RowBox[{
      "otherwise", " ", "we", " ", "do", " ", "not", " ", "define", " ", 
       "the", " ", "same", " ", "prob", " ", "dist"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"integralUpperX", " ", "=", " ", 
     RowBox[{"integralUpperX", " ", "+", " ", "lambda"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8242751545433*^9, 3.8242753084586215`*^9}, {
   3.824279580301702*^9, 3.8242795843511815`*^9}, {3.82428254520244*^9, 
   3.8242825722718425`*^9}, {3.824283217245403*^9, 3.824283238271101*^9}, {
   3.8242833847470365`*^9, 3.824283423515974*^9}, {3.82428557594245*^9, 
   3.82428563611611*^9}, {3.8242857604345303`*^9, 3.8242858182601714`*^9}, {
   3.8242858651838503`*^9, 3.8242858748335533`*^9}, {3.8242859926614437`*^9, 
   3.8242860294575014`*^9}, {3.8242860647362223`*^9, 
   3.8242860970114465`*^9}, {3.82428655201753*^9, 3.824286553226683*^9}, {
   3.8242866495555367`*^9, 3.8242866570579047`*^9}, 3.8242867525327168`*^9, {
   3.8242994799444304`*^9, 
   3.8242995024544306`*^9}},ExpressionUUID->"91c36bff-44b5-4137-8ef1-\
3ea30884c18d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Dilatation", " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"integralLowerX", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"integralUpperX", " ", "=", " ", "0.37"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lambda", " ", "=", " ", "1.12"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"means", " ", "=", " ", 
     RowBox[{"Subdivide", "[", 
      RowBox[{"0.15", ",", "0.32", ",", "20"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"std", " ", "=", " ", "0.005"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Adist", " ", ":=", " ", 
     RowBox[{"MixtureDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.0", ",", "0.1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "5", "]"}], "]"}], ",", 
           RowBox[{"std", "*", "4"}]}], "]"}], ",", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "13", "]"}], "]"}], ",", 
           RowBox[{"std", "*", "2"}]}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Bdist", " ", ":=", " ", 
     RowBox[{"MixtureDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.5", ",", "0.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", "std"}], "]"}], ",", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "15", "]"}], "]"}], ",", "std"}], "]"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Cdist", " ", ":=", " ", 
     RowBox[{"GammaDistribution", "[", 
      RowBox[{"15", ",", "0.013"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"uniformLower", " ", "=", "integralLowerX"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"uniformUpper", " ", "=", " ", "integralUpperX"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ddist", " ", ":=", 
     RowBox[{"UniformDistribution", "[", 
      RowBox[{"{", 
       RowBox[{"uniformLower", ",", " ", "uniformUpper"}], "}"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Adensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "*", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Adist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Bdensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "*", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Bdist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Cdensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "*", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Cdist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Ddensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "*", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Ddist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Acum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "*", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Adist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Bcum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "*", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Bdist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Ccum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "*", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Cdist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Dcum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "*", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Ddist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"integralLowerX", " ", "=", " ", 
     RowBox[{"integralLowerX", " ", "*", " ", "lambda"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"change", " ", "this", " ", "after", " ", "D", " ", 
      RowBox[{"(", "uniform", ")"}], " ", "is", " ", "defined"}], ",", " ", 
     RowBox[{
     "otherwise", " ", "we", " ", "do", " ", "not", " ", "define", " ", "the",
       " ", "same", " ", "prob", " ", "dist"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"integralUpperX", " ", "=", " ", 
     RowBox[{"integralUpperX", " ", "*", " ", "lambda"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8242791810640683`*^9, 3.824279198728469*^9}, {
  3.824279365839757*^9, 3.8242794067124386`*^9}, {3.8242795872942038`*^9, 
  3.8242795926625834`*^9}, {3.8242813230636363`*^9, 3.824281358258418*^9}, {
  3.8242829787521615`*^9, 3.8242830119385977`*^9}, {3.8242830911236267`*^9, 
  3.8242831489368157`*^9}, {3.8242941959911966`*^9, 3.8242942439113674`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"3a86c19a-fe7a-4b68-9017-50cde1374fa3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Inverse", " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"integralLowerX", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"integralUpperX", " ", "=", " ", "0.37"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lambda", " ", "=", " ", 
     RowBox[{"-", "1.0"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"means", " ", "=", " ", 
     RowBox[{"Subdivide", "[", 
      RowBox[{"0.15", ",", "0.32", ",", "20"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"std", " ", "=", " ", "0.005"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Adist", " ", ":=", " ", 
     RowBox[{"MixtureDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.0", ",", "0.1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "5", "]"}], "]"}], ",", 
           RowBox[{"std", "*", "4"}]}], "]"}], ",", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "13", "]"}], "]"}], ",", 
           RowBox[{"std", "*", "2"}]}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Bdist", " ", ":=", " ", 
     RowBox[{"MixtureDistribution", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.5", ",", "0.5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", "std"}], "]"}], ",", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{"means", "[", 
            RowBox[{"[", "15", "]"}], "]"}], ",", "std"}], "]"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Cdist", " ", ":=", " ", 
     RowBox[{"GammaDistribution", "[", 
      RowBox[{"15", ",", "0.013"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"uniformLower", " ", "=", "integralLowerX"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"uniformUpper", " ", "=", " ", "integralUpperX"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ddist", " ", ":=", 
     RowBox[{"UniformDistribution", "[", 
      RowBox[{"{", 
       RowBox[{"uniformLower", ",", " ", "uniformUpper"}], "}"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Adensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "*", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Adist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Bdensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "*", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Bdist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Cdensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "*", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Cdist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Ddensity", "[", "x_", "]"}], " ", ":=", " ", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "*", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Ddist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Acum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "*", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Adist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Bcum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "*", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Bdist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Ccum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "*", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Cdist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Dcum", "[", "x_", "]"}], " ", ":=", "  ", 
     RowBox[{"CDF", "[", 
      RowBox[{
       RowBox[{"TransformedDistribution", "[", 
        RowBox[{
         RowBox[{"u", "*", "lambda"}], ",", 
         RowBox[{"u", "\[Distributed]", "Ddist"}]}], "]"}], ",", "x"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"temp", " ", "=", " ", 
     RowBox[{"integralUpperX", " ", "*", " ", "lambda"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"if", " ", "we", " ", "multiply", " ", "by"}], " ", "-", "1"}], 
     ",", " ", 
     RowBox[{
     "the", " ", "lower", " ", "bound", " ", "is", " ", "the", " ", "upper", 
      " ", "bound"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"integralUpperX", " ", "=", " ", 
     RowBox[{"integralLowerX", " ", "*", " ", "lambda"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"integralLowerX", " ", "=", " ", "temp"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8242945278722553`*^9, 3.8242945290527096`*^9}, {
   3.8242947349927254`*^9, 3.82429476731279*^9}, {3.824299202018298*^9, 
   3.8242992139865303`*^9}, 3.824299289538937*^9, {3.824299419534053*^9, 
   3.824299432694019*^9}, 3.8243008484348707`*^9, {3.8243009253837314`*^9, 
   3.8243009369171877`*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"9fd7702c-fb4a-4cd7-9ece-558e637e2898"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"plot", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Adensity", "[", "x", "]"}], ",", 
      RowBox[{"Bdensity", "[", "x", "]"}], ",", 
      RowBox[{"Cdensity", "[", "x", "]"}], ",", 
      RowBox[{"Ddensity", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "integralLowerX", ",", "integralUpperX"}], "}"}], 
    ",", "  ", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\"", ",", " ", 
       "\"\<D\>\""}], "}"}]}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", " ", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<Probability density\>\""}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<densityplot.pdf\>\"", ",", "plot"}], "]"}]}], "Input",
 CellChangeTimes->{{3.823584993069373*^9, 3.8235850804158807`*^9}, {
   3.8235851264888835`*^9, 3.823585129087891*^9}, {3.823585216913787*^9, 
   3.8235852257466583`*^9}, {3.8235853517307835`*^9, 
   3.8235853853841047`*^9}, {3.823585469317622*^9, 3.823585473174745*^9}, {
   3.8235855119028435`*^9, 3.823585569248437*^9}, {3.8235856308046694`*^9, 
   3.82358563466216*^9}, {3.82359331243344*^9, 3.823593334023094*^9}, {
   3.823596241891214*^9, 3.823596251172865*^9}, {3.8235976115117397`*^9, 
   3.823597616718612*^9}, {3.8235978731172743`*^9, 3.823597873405015*^9}, {
   3.8235979186337447`*^9, 3.8235979190828943`*^9}, {3.823598611437242*^9, 
   3.8235986282429123`*^9}, {3.823608762774683*^9, 3.8236087629286304`*^9}, {
   3.8236088077594533`*^9, 3.82360880807474*^9}, {3.8236100568850536`*^9, 
   3.823610093874863*^9}, {3.8236679791289425`*^9, 3.8236679861822195`*^9}, {
   3.823762904216313*^9, 3.8237629126623793`*^9}, {3.8237630112645273`*^9, 
   3.8237630322815366`*^9}, {3.8237632625718555`*^9, 
   3.8237632674539986`*^9}, {3.8237633997564726`*^9, 3.823763401047245*^9}, {
   3.823929065658495*^9, 3.8239290843223066`*^9}, {3.8242753803978825`*^9, 
   3.824275394676408*^9}, {3.824275575558981*^9, 3.824275575733018*^9}, {
   3.8242761560014453`*^9, 3.8242761562424526`*^9}, 3.8242832711397295`*^9, {
   3.824294816693137*^9, 3.8242948236130795`*^9}},
 CellLabel->
  "In[310]:=",ExpressionUUID->"4dc805e7-2262-47b0-944a-93e28424c905"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
SZSrVGfiU1Io/wdpX6IR
          "]]}, Annotation[#, "Charting`Private`Tag$689640#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
neZ0anY2C2bfR1+ZYNrI/Q9zBArG
          "]]}, Annotation[#, "Charting`Private`Tag$689640#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
N1qifaIVyK+lawzdzLH8r+46FrhWUHVOuK29ywIrc7uTOAitMLs+aeN60gKr
G0r4ckmvFawafy6xX7TAyJ21t++YtEKryw+rjJcWWK9RK571TCvIf39XdrXX
AhttGtyTaNkKP/7r/hmxboF91VxwFDrbClo8rIpfhCyx1RrmsgL7VqDyjI64
a1hi/w7vW1dybGV8pykpCdlaYlzFB/UbnBn5Dh4nzvpYYpKPzUcol1uhIjik
urHQElPkdTts69EKaYHEpOevLTG1+/6BY16tsCOEpS+lwxIDlniSh08rXPgc
7e89aomZ3M3l/+XH2E9Ol9BetMRsVquc7wW2wr7yEyo/Ni0xZy9iBWdwK+SK
3yCHc1hhHjOf/qTeawXEB0dZ5bPC/Jy/GUpEtsKXfha6rrAVFjqwnfo8phV2
OSboXJOwwu5b8o+rxrcCz3a2zmVpK+wRWV75/YNW6Ijd2aQhY4Xl6WneNXrY
CrfNbX3GpKyw5+/M2miPWiHW5Hf3BXErrPaEyz7HjFaYt1qWqtlvhX144es6
k90Kjwdlro3uscLaDsS+9H7C0P+Cy39uhxVGz8/a3ChoBUeq9KfuP5bYsPCL
U9HPWkHxReNQzjdLbC6lOX1PGeN8+pU0yy+W2DJ332RmZSs0FeyhrLZZYltR
cypy1a1QqeL5L+GVJcax/TfkxatW8KvQuCqdZ4mJL8kIEd4y/MFlK+TsaYkZ
fjglm/mxFYbLQn1LzCwx7wRv5ZuEVriXoDj37rAlhj/4QV+U0gpz1fK3oyct
sG9rU+Y/O1thxvBm5dl3FtheEvf5VjojX+LTw0dSLbDLF8/5+A4y8qnI+Htc
2wJLOhoWfGqkFSQsVL5EM/zXuPUsVnKiFe43xXMbN5pj3FmruZT5VjgI1pel
fpzBquhJZNk/rfC3V8L4sdpp7HN+fd+fTYa/oz+4QpMZxnJzeKyLqQ0Mq7Wd
P5wyw2y4D6/f5WgDpzXv2jlbU+yPXots7/42+DODp8c6ncJ06zaDo9TbQNx9
237d0ADzjJSNc9Bqg7qa8X4XRn8/sjRJVUHb4PWXn25SmD42++Nx6ZBBG/Ae
r8g7pK2HJSgc71c72wa9S0bMo1o6WN3quXGuc20g7y6lEfQew0bwYd/HHNtA
i1jVf0EHw1ScO1keXGqDHeEKQU1ZKNb3+NrRad82aGb2l77+Uwvbdk/WehvQ
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
          "]]}, Annotation[#, "Charting`Private`Tag$689640#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
rMJCCuYU+YtitzeG/wKlLNgw
          "]]}, Annotation[#, "Charting`Private`Tag$689640#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.05, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\"Probability density\"", TraditionalForm]}, 
     AxesOrigin -> {0.05, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.05, 0.4}, {0., 72.53471375119916}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"A\"", "\"B\"", "\"C\"", "\"D\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8235849995873666`*^9, {3.8235850378281865`*^9, 3.8235850814627075`*^9}, {
   3.823585130518959*^9, 3.8235851716415114`*^9}, {3.8235852273409615`*^9, 
   3.8235852356309233`*^9}, 3.8235852932138557`*^9, {3.8235853541156235`*^9, 
   3.8235853870239725`*^9}, 3.8235854808600025`*^9, {3.8235855168242607`*^9, 
   3.82358552975088*^9}, 3.8235855714928703`*^9, 3.8235856370698757`*^9, 
   3.823585737818636*^9, 3.823588865661314*^9, 3.823588905203786*^9, 
   3.8235889616327143`*^9, 3.823593162700328*^9, 3.823593253173583*^9, 
   3.823593337348406*^9, 3.823593453363072*^9, {3.8235962639987564`*^9, 
   3.823596286813943*^9}, 3.8235963277310486`*^9, 3.8235965059883027`*^9, 
   3.823597632834937*^9, {3.823597881123577*^9, 3.8235978883334436`*^9}, 
   3.823597995496934*^9, 3.823598441500557*^9, 3.823598690559326*^9, {
   3.8235988730832806`*^9, 3.8235988841692677`*^9}, 3.823600128697536*^9, 
   3.823600194565716*^9, 3.8236012778772783`*^9, 3.8236013479250035`*^9, 
   3.8236014213067603`*^9, 3.823602358708149*^9, 3.8236085800533867`*^9, {
   3.8236087648573866`*^9, 3.8236088163758917`*^9}, 3.823608865064088*^9, 
   3.8236089370689*^9, 3.8236089851339493`*^9, 3.82360915272901*^9, 
   3.823609207092848*^9, {3.823610095412037*^9, 3.8236101157081385`*^9}, 
   3.823610264503869*^9, 3.8236680034743233`*^9, 3.823668046708166*^9, 
   3.8237631201319304`*^9, 3.823763155513753*^9, 3.8237632004739285`*^9, 
   3.8237632566634965`*^9, {3.8237633142308664`*^9, 3.8237633235367785`*^9}, 
   3.8237633808790236`*^9, 3.8237634199199047`*^9, 3.823763528301965*^9, 
   3.823763569605805*^9, 3.8237636288262153`*^9, 3.823763736569333*^9, 
   3.82376380816812*^9, 3.823763857649275*^9, 3.823764136708026*^9, 
   3.8237642290458527`*^9, 3.8237644122940154`*^9, 3.8237652733952026`*^9, 
   3.8237655739626102`*^9, 3.8237867371948814`*^9, 3.8237986954383802`*^9, 
   3.823798732768258*^9, 3.823799080055307*^9, 3.823799500340825*^9, {
   3.823799649193261*^9, 3.823799676083987*^9}, 3.823799714600343*^9, 
   3.8237997541598783`*^9, 3.823799802048982*^9, 3.8237998403861756`*^9, 
   3.823799970326947*^9, {3.823800049417872*^9, 3.823800062444398*^9}, {
   3.823800137986002*^9, 3.823800158573314*^9}, {3.8238003081940317`*^9, 
   3.8238003540472746`*^9}, 3.8238004166191125`*^9, 3.8238004701693296`*^9, {
   3.8238007873525076`*^9, 3.8238008013754253`*^9}, {3.823800854564666*^9, 
   3.823800879606924*^9}, 3.8238009171220984`*^9, {3.82380115892994*^9, 
   3.8238011694011126`*^9}, 3.823801247854594*^9, 3.823801289560566*^9, 
   3.8238013822254853`*^9, 3.8238014131329713`*^9, 3.8238483611145563`*^9, 
   3.8238485880308733`*^9, 3.8238649324560723`*^9, 3.8238652495870023`*^9, 
   3.8238653354708767`*^9, 3.8238788690994654`*^9, 3.8239229091360207`*^9, 
   3.8239230271117735`*^9, 3.823923093340935*^9, 3.8239237197302923`*^9, 
   3.8239238433226557`*^9, 3.8239238805249643`*^9, {3.8239241090990267`*^9, 
   3.8239241222378473`*^9}, 3.823924187515544*^9, 3.8239242368331614`*^9, 
   3.8239243131696815`*^9, 3.8239244175121813`*^9, 3.823925239783204*^9, 
   3.823925293520336*^9, 3.823925409196957*^9, 3.823925531799337*^9, 
   3.823925607172367*^9, 3.8239256610076933`*^9, {3.8239257046716375`*^9, 
   3.82392572106399*^9}, 3.8239258530223904`*^9, 3.8239260267570047`*^9, 
   3.8239262418594437`*^9, 3.8239262960386267`*^9, 3.823926362912568*^9, {
   3.823927597017203*^9, 3.8239276210631685`*^9}, 3.8239277462599306`*^9, 
   3.8239279001859913`*^9, 3.8239279909302416`*^9, {3.8239290733799*^9, 
   3.8239290885568857`*^9}, 3.8239291205158534`*^9, 3.823929636914347*^9, 
   3.823930668917669*^9, 3.8239311521565123`*^9, 3.824275323565933*^9, 
   3.8242755860644445`*^9, {3.8242761492519817`*^9, 3.8242761606037536`*^9}, 
   3.8242790652461357`*^9, 3.8242813034137087`*^9, {3.8242813655844526`*^9, 
   3.824281387619047*^9}, {3.824282989415513*^9, 3.824283019529168*^9}, 
   3.8242831375356636`*^9, {3.824283253743027*^9, 3.8242832739309444`*^9}, 
   3.8242833362564216`*^9, 3.8242833902804494`*^9, 3.8242839870625343`*^9, 
   3.8242843076925*^9, 3.824285308861861*^9, 3.8242854907904863`*^9, 
   3.824285851818602*^9, 3.8242858836189785`*^9, {3.8242860381358056`*^9, 
   3.8242860563835173`*^9}, 3.824286106962406*^9, 3.8242865907797227`*^9, 
   3.8242886660283546`*^9, 3.824288864541009*^9, 3.8242942535914354`*^9, {
   3.8242948042027164`*^9, 3.8242948300229783`*^9}, 3.824300856077017*^9, 
   3.824300946649766*^9, 3.824301312149471*^9, 3.824301482024761*^9},
 CellLabel->
  "Out[310]=",ExpressionUUID->"f8dc0fad-1e47-4d3b-b0bf-3c35da71090f"],

Cell[BoxData["\<\"densityplot.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.8235849995873666`*^9, {3.8235850378281865`*^9, 3.8235850814627075`*^9}, {
   3.823585130518959*^9, 3.8235851716415114`*^9}, {3.8235852273409615`*^9, 
   3.8235852356309233`*^9}, 3.8235852932138557`*^9, {3.8235853541156235`*^9, 
   3.8235853870239725`*^9}, 3.8235854808600025`*^9, {3.8235855168242607`*^9, 
   3.82358552975088*^9}, 3.8235855714928703`*^9, 3.8235856370698757`*^9, 
   3.823585737818636*^9, 3.823588865661314*^9, 3.823588905203786*^9, 
   3.8235889616327143`*^9, 3.823593162700328*^9, 3.823593253173583*^9, 
   3.823593337348406*^9, 3.823593453363072*^9, {3.8235962639987564`*^9, 
   3.823596286813943*^9}, 3.8235963277310486`*^9, 3.8235965059883027`*^9, 
   3.823597632834937*^9, {3.823597881123577*^9, 3.8235978883334436`*^9}, 
   3.823597995496934*^9, 3.823598441500557*^9, 3.823598690559326*^9, {
   3.8235988730832806`*^9, 3.8235988841692677`*^9}, 3.823600128697536*^9, 
   3.823600194565716*^9, 3.8236012778772783`*^9, 3.8236013479250035`*^9, 
   3.8236014213067603`*^9, 3.823602358708149*^9, 3.8236085800533867`*^9, {
   3.8236087648573866`*^9, 3.8236088163758917`*^9}, 3.823608865064088*^9, 
   3.8236089370689*^9, 3.8236089851339493`*^9, 3.82360915272901*^9, 
   3.823609207092848*^9, {3.823610095412037*^9, 3.8236101157081385`*^9}, 
   3.823610264503869*^9, 3.8236680034743233`*^9, 3.823668046708166*^9, 
   3.8237631201319304`*^9, 3.823763155513753*^9, 3.8237632004739285`*^9, 
   3.8237632566634965`*^9, {3.8237633142308664`*^9, 3.8237633235367785`*^9}, 
   3.8237633808790236`*^9, 3.8237634199199047`*^9, 3.823763528301965*^9, 
   3.823763569605805*^9, 3.8237636288262153`*^9, 3.823763736569333*^9, 
   3.82376380816812*^9, 3.823763857649275*^9, 3.823764136708026*^9, 
   3.8237642290458527`*^9, 3.8237644122940154`*^9, 3.8237652733952026`*^9, 
   3.8237655739626102`*^9, 3.8237867371948814`*^9, 3.8237986954383802`*^9, 
   3.823798732768258*^9, 3.823799080055307*^9, 3.823799500340825*^9, {
   3.823799649193261*^9, 3.823799676083987*^9}, 3.823799714600343*^9, 
   3.8237997541598783`*^9, 3.823799802048982*^9, 3.8237998403861756`*^9, 
   3.823799970326947*^9, {3.823800049417872*^9, 3.823800062444398*^9}, {
   3.823800137986002*^9, 3.823800158573314*^9}, {3.8238003081940317`*^9, 
   3.8238003540472746`*^9}, 3.8238004166191125`*^9, 3.8238004701693296`*^9, {
   3.8238007873525076`*^9, 3.8238008013754253`*^9}, {3.823800854564666*^9, 
   3.823800879606924*^9}, 3.8238009171220984`*^9, {3.82380115892994*^9, 
   3.8238011694011126`*^9}, 3.823801247854594*^9, 3.823801289560566*^9, 
   3.8238013822254853`*^9, 3.8238014131329713`*^9, 3.8238483611145563`*^9, 
   3.8238485880308733`*^9, 3.8238649324560723`*^9, 3.8238652495870023`*^9, 
   3.8238653354708767`*^9, 3.8238788690994654`*^9, 3.8239229091360207`*^9, 
   3.8239230271117735`*^9, 3.823923093340935*^9, 3.8239237197302923`*^9, 
   3.8239238433226557`*^9, 3.8239238805249643`*^9, {3.8239241090990267`*^9, 
   3.8239241222378473`*^9}, 3.823924187515544*^9, 3.8239242368331614`*^9, 
   3.8239243131696815`*^9, 3.8239244175121813`*^9, 3.823925239783204*^9, 
   3.823925293520336*^9, 3.823925409196957*^9, 3.823925531799337*^9, 
   3.823925607172367*^9, 3.8239256610076933`*^9, {3.8239257046716375`*^9, 
   3.82392572106399*^9}, 3.8239258530223904`*^9, 3.8239260267570047`*^9, 
   3.8239262418594437`*^9, 3.8239262960386267`*^9, 3.823926362912568*^9, {
   3.823927597017203*^9, 3.8239276210631685`*^9}, 3.8239277462599306`*^9, 
   3.8239279001859913`*^9, 3.8239279909302416`*^9, {3.8239290733799*^9, 
   3.8239290885568857`*^9}, 3.8239291205158534`*^9, 3.823929636914347*^9, 
   3.823930668917669*^9, 3.8239311521565123`*^9, 3.824275323565933*^9, 
   3.8242755860644445`*^9, {3.8242761492519817`*^9, 3.8242761606037536`*^9}, 
   3.8242790652461357`*^9, 3.8242813034137087`*^9, {3.8242813655844526`*^9, 
   3.824281387619047*^9}, {3.824282989415513*^9, 3.824283019529168*^9}, 
   3.8242831375356636`*^9, {3.824283253743027*^9, 3.8242832739309444`*^9}, 
   3.8242833362564216`*^9, 3.8242833902804494`*^9, 3.8242839870625343`*^9, 
   3.8242843076925*^9, 3.824285308861861*^9, 3.8242854907904863`*^9, 
   3.824285851818602*^9, 3.8242858836189785`*^9, {3.8242860381358056`*^9, 
   3.8242860563835173`*^9}, 3.824286106962406*^9, 3.8242865907797227`*^9, 
   3.8242886660283546`*^9, 3.824288864541009*^9, 3.8242942535914354`*^9, {
   3.8242948042027164`*^9, 3.8242948300229783`*^9}, 3.824300856077017*^9, 
   3.824300946649766*^9, 3.824301312149471*^9, 3.8243014823170195`*^9},
 CellLabel->
  "Out[311]=",ExpressionUUID->"cef8008b-efd2-4200-91ef-9bb78bd9ad98"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"plot", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Acum", "[", "x", "]"}], ",", 
      RowBox[{"Bcum", "[", "x", "]"}], ",", 
      RowBox[{"Ccum", "[", "x", "]"}], ",", 
      RowBox[{"Dcum", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0.0", ",", "0.37"}], "}"}], ",", " ", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\"", ",", " ", 
       "\"\<D\>\""}], "}"}]}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", " ", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<Cumulative Probability\>\""}], "}"}]}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<cumulativedensityplot.pdf\>\"", ",", "plot"}], "]"}]}], "Input",
 CellChangeTimes->{{3.823597928375991*^9, 3.823597948072997*^9}, {
   3.823608753311778*^9, 3.8236087545068636`*^9}, {3.823608811158999*^9, 
   3.823608812959647*^9}, {3.8236101029784656`*^9, 3.8236101111562977`*^9}, {
   3.8236102207904944`*^9, 3.8236102269205284`*^9}, {3.8236679636001625`*^9, 
   3.823667995700148*^9}, {3.8237630417641916`*^9, 3.823763057607795*^9}, 
   3.823922989828787*^9, {3.823929128228129*^9, 3.823929130539065*^9}, {
   3.824275384583604*^9, 3.82427539823216*^9}, {3.8242755776819057`*^9, 
   3.8242755794430428`*^9}, 3.824283357147658*^9},
 CellLabel->
  "In[312]:=",ExpressionUUID->"40bc57e6-f7c3-4335-900c-019d06c5651e"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
F3DZ
          "]]}, Annotation[#, "Charting`Private`Tag$724424#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
cv7n/w98w+f9
          "]]}, Annotation[#, "Charting`Private`Tag$724424#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
gO0l//n/AJT5C2c=
          "]]}, Annotation[#, "Charting`Private`Tag$724424#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
+g==
          "]]}, Annotation[#, "Charting`Private`Tag$724424#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\"Cumulative Probability\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 0.37}, {0., 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"A\"", "\"B\"", "\"C\"", "\"D\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8235979717682505`*^9, 3.8235980124195747`*^9, 3.8235984635128117`*^9, 
   3.823598707731303*^9, {3.823598875393159*^9, 3.823598884543676*^9}, 
   3.8236001290608644`*^9, 3.8236001949420567`*^9, 3.8236012781935654`*^9, 
   3.8236013482362857`*^9, 3.8236014216480703`*^9, 3.823602359040451*^9, 
   3.8236085803906946`*^9, {3.82360876741372*^9, 3.823608818418692*^9}, 
   3.8236088654284167`*^9, 3.8236089374282274`*^9, 3.823608985497289*^9, 
   3.8236091530811625`*^9, 3.823609207436078*^9, 3.823610116291642*^9, 
   3.8236102650353355`*^9, 3.823668004254757*^9, 3.823668047202507*^9, 
   3.8237631208555727`*^9, 3.823763156043871*^9, 3.8237632010613484`*^9, 
   3.8237632572139945`*^9, {3.8237633147790174`*^9, 3.823763324422996*^9}, 
   3.8237633814680405`*^9, 3.8237634213947945`*^9, 3.82376352895538*^9, 
   3.823763573088044*^9, 3.8237636316653323`*^9, 3.82376373713284*^9, 
   3.823763808703342*^9, 3.823763858315879*^9, 3.823764139163941*^9, 
   3.8237642318663054`*^9, 3.823764415091695*^9, 3.823765276157878*^9, 
   3.823765576724918*^9, 3.823786739769679*^9, 3.823799082774454*^9, 
   3.823799503102355*^9, 3.823799842501395*^9, 3.8238000667664165`*^9, 
   3.8238001629233103`*^9, 3.823800358421355*^9, 3.8238004208386745`*^9, 
   3.8238004743506203`*^9, 3.8238009209897985`*^9, 3.8238014165070744`*^9, 
   3.8238483643672705`*^9, 3.8238485913067923`*^9, 3.8238649358286448`*^9, 
   3.8238652529816856`*^9, 3.8238653397428856`*^9, 3.8238788725247507`*^9, 
   3.82392299548376*^9, 3.8239230298571777`*^9, 3.8239230961153975`*^9, 
   3.8239237323869495`*^9, {3.823923862468379*^9, 3.8239238823395686`*^9}, 
   3.823924131831547*^9, 3.8239242654273987`*^9, {3.8239244095685816`*^9, 
   3.8239244200166545`*^9}, 3.8239252766471777`*^9, 3.823925419329598*^9, 
   3.823925539104273*^9, 3.8239256770765996`*^9, {3.8239257094267454`*^9, 
   3.8239257235860567`*^9}, 3.823925855575178*^9, 3.823926029273793*^9, 
   3.8239262448545556`*^9, 3.8239262993277683`*^9, 3.8239263662883563`*^9, 
   3.823927624309215*^9, 3.8239277514436107`*^9, 3.8239279047418566`*^9, 
   3.8239279940145903`*^9, {3.8239290958594074`*^9, 3.823929134562585*^9}, 
   3.823929640513749*^9, 3.8239306723550444`*^9, 3.823931155841221*^9, 
   3.8242753265014772`*^9, 3.8242755915352693`*^9, {3.82428334374175*^9, 
   3.824283360293132*^9}, {3.824283395660465*^9, 3.8242834312150187`*^9}, 
   3.824283906752472*^9, {3.824283972479624*^9, 3.8242839919571853`*^9}, 
   3.8242849583968983`*^9, 3.824285311817673*^9, 3.8242858895951777`*^9, 
   3.8242886687229404`*^9, 3.824288875804076*^9, 3.8242942746714325`*^9, 
   3.8243013151437206`*^9, 3.8243014855793266`*^9},
 CellLabel->
  "Out[312]=",ExpressionUUID->"e0431505-c5ef-4067-85f1-3a546421f078"],

Cell[BoxData["\<\"cumulativedensityplot.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.8235979717682505`*^9, 3.8235980124195747`*^9, 3.8235984635128117`*^9, 
   3.823598707731303*^9, {3.823598875393159*^9, 3.823598884543676*^9}, 
   3.8236001290608644`*^9, 3.8236001949420567`*^9, 3.8236012781935654`*^9, 
   3.8236013482362857`*^9, 3.8236014216480703`*^9, 3.823602359040451*^9, 
   3.8236085803906946`*^9, {3.82360876741372*^9, 3.823608818418692*^9}, 
   3.8236088654284167`*^9, 3.8236089374282274`*^9, 3.823608985497289*^9, 
   3.8236091530811625`*^9, 3.823609207436078*^9, 3.823610116291642*^9, 
   3.8236102650353355`*^9, 3.823668004254757*^9, 3.823668047202507*^9, 
   3.8237631208555727`*^9, 3.823763156043871*^9, 3.8237632010613484`*^9, 
   3.8237632572139945`*^9, {3.8237633147790174`*^9, 3.823763324422996*^9}, 
   3.8237633814680405`*^9, 3.8237634213947945`*^9, 3.82376352895538*^9, 
   3.823763573088044*^9, 3.8237636316653323`*^9, 3.82376373713284*^9, 
   3.823763808703342*^9, 3.823763858315879*^9, 3.823764139163941*^9, 
   3.8237642318663054`*^9, 3.823764415091695*^9, 3.823765276157878*^9, 
   3.823765576724918*^9, 3.823786739769679*^9, 3.823799082774454*^9, 
   3.823799503102355*^9, 3.823799842501395*^9, 3.8238000667664165`*^9, 
   3.8238001629233103`*^9, 3.823800358421355*^9, 3.8238004208386745`*^9, 
   3.8238004743506203`*^9, 3.8238009209897985`*^9, 3.8238014165070744`*^9, 
   3.8238483643672705`*^9, 3.8238485913067923`*^9, 3.8238649358286448`*^9, 
   3.8238652529816856`*^9, 3.8238653397428856`*^9, 3.8238788725247507`*^9, 
   3.82392299548376*^9, 3.8239230298571777`*^9, 3.8239230961153975`*^9, 
   3.8239237323869495`*^9, {3.823923862468379*^9, 3.8239238823395686`*^9}, 
   3.823924131831547*^9, 3.8239242654273987`*^9, {3.8239244095685816`*^9, 
   3.8239244200166545`*^9}, 3.8239252766471777`*^9, 3.823925419329598*^9, 
   3.823925539104273*^9, 3.8239256770765996`*^9, {3.8239257094267454`*^9, 
   3.8239257235860567`*^9}, 3.823925855575178*^9, 3.823926029273793*^9, 
   3.8239262448545556`*^9, 3.8239262993277683`*^9, 3.8239263662883563`*^9, 
   3.823927624309215*^9, 3.8239277514436107`*^9, 3.8239279047418566`*^9, 
   3.8239279940145903`*^9, {3.8239290958594074`*^9, 3.823929134562585*^9}, 
   3.823929640513749*^9, 3.8239306723550444`*^9, 3.823931155841221*^9, 
   3.8242753265014772`*^9, 3.8242755915352693`*^9, {3.82428334374175*^9, 
   3.824283360293132*^9}, {3.824283395660465*^9, 3.8242834312150187`*^9}, 
   3.824283906752472*^9, {3.824283972479624*^9, 3.8242839919571853`*^9}, 
   3.8242849583968983`*^9, 3.824285311817673*^9, 3.8242858895951777`*^9, 
   3.8242886687229404`*^9, 3.824288875804076*^9, 3.8242942746714325`*^9, 
   3.8243013151437206`*^9, 3.8243014858646336`*^9},
 CellLabel->
  "Out[313]=",ExpressionUUID->"2168c180-3a90-459e-ae49-48600ae13725"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fKL", "[", "x_", "]"}], ":=", " ", 
  RowBox[{"x", " ", "*", " ", 
   RowBox[{"Log", "[", "x", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fJS", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"x", " ", "*", " ", 
    RowBox[{"Log", "[", 
     RowBox[{"2", "*", 
      RowBox[{"x", " ", "/", " ", 
       RowBox[{"(", 
        RowBox[{"x", " ", "+", "1"}], ")"}]}]}], "]"}]}], "+", " ", 
   RowBox[{"Log", "[", 
    RowBox[{"2", "/", 
     RowBox[{"(", 
      RowBox[{"x", "+", "1"}], ")"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fTV", "[", "x_", "]"}], ":=", " ", 
  RowBox[{"0.5", "*", 
   RowBox[{"Abs", "[", 
    RowBox[{"x", " ", "-", "1"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fHellsquared", "[", "x_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", " ", "-", " ", 
     RowBox[{"Sqrt", "[", "x", "]"}]}], ")"}], "^", "2"}]}]}], "Input",
 CellChangeTimes->{{3.823587830697097*^9, 3.8235878311423903`*^9}, {
   3.8235881173290606`*^9, 3.8235881177981167`*^9}, {3.8235884764342585`*^9, 
   3.8235886279544144`*^9}, {3.8235886943805923`*^9, 3.823588789602674*^9}, {
   3.823600094001971*^9, 3.8236001228141823`*^9}, 3.82360018754733*^9},
 CellLabel->
  "In[314]:=",ExpressionUUID->"e358175c-e1cb-43c4-8625-48f1658670d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Fdiv", "[", 
  RowBox[{"Adensity", ",", "Ddensity", ",", "fHellsquared"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Fdiv", "[", 
  RowBox[{"Cdensity", ",", "Adensity", ",", "fTV"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8235940061217484`*^9, 3.823594022222142*^9}, {
  3.8235965429839773`*^9, 3.8235965531324015`*^9}, {3.823598611444256*^9, 
  3.8235986219186773`*^9}, {3.8242853722417784`*^9, 3.8242853737602224`*^9}, {
  3.824286767524802*^9, 3.8242867809520826`*^9}},
 CellLabel->
  "In[318]:=",ExpressionUUID->"e2fa4b6b-bfe4-4dd2-b551-c5c710347db9"],

Cell[BoxData["1.99990095033956934658899286452078747062`15."], "Output",
 CellChangeTimes->{
  3.8235987078072085`*^9, 3.823598884626149*^9, 3.8236001291289268`*^9, 
   3.8236001950031123`*^9, 3.8236012782496166`*^9, 3.8236013482973423`*^9, 
   3.823601421708125*^9, 3.823602359100505*^9, 3.823608580440733*^9, 
   3.823608865489473*^9, 3.823608937498292*^9, 3.823608985573349*^9, 
   3.8236091531372137`*^9, 3.8236092074871244`*^9, 3.823610116611586*^9, 
   3.8236102653021507`*^9, 3.823668004662719*^9, 3.823668047438329*^9, 
   3.8237631213839045`*^9, 3.823763156378615*^9, 3.823763201379573*^9, 
   3.823763257519101*^9, {3.8237633150052185`*^9, 3.823763324886893*^9}, 
   3.823763381737956*^9, 3.8237634217441125`*^9, 3.8237635292486467`*^9, 
   3.823763573455408*^9, 3.8237636320582323`*^9, 3.8237637374262543`*^9, 
   3.8237638089982257`*^9, 3.8237638586402073`*^9, 3.823764139604813*^9, 
   3.823764232380856*^9, 3.8237644154292345`*^9, 3.823765276439548*^9, 
   3.8237655770998125`*^9, 3.8237867400401683`*^9, 3.823799083134415*^9, 
   3.8237995034480658`*^9, 3.823799842864914*^9, 3.8238000671474*^9, 
   3.823800163272337*^9, 3.8238003587722397`*^9, 3.8238004212238483`*^9, 
   3.823800474655611*^9, 3.8238009213064885`*^9, 3.8238014168853226`*^9, 
   3.8238483646970854`*^9, 3.8238485917520084`*^9, 3.823864936313058*^9, 
   3.823865253442542*^9, 3.8238653402001944`*^9, 3.823878872824135*^9, 
   3.8239230302169333`*^9, 3.8239230964011984`*^9, 3.8239238826324916`*^9, 
   3.8239244203249283`*^9, 3.8239257238956347`*^9, 3.823925855906769*^9, 
   3.8239260296353197`*^9, 3.8239262451801434`*^9, 3.8239262996828637`*^9, 
   3.8239263666392956`*^9, 3.823927624636391*^9, 3.823927752023364*^9, 
   3.8239279943190575`*^9, 3.8239296408083353`*^9, 3.823930672658335*^9, 
   3.823931156162737*^9, 3.8242753269687667`*^9, 3.8242853121993637`*^9, {
   3.824285366096325*^9, 3.8242853750813913`*^9}, 3.824285900095173*^9, 
   3.8242861458548574`*^9, 3.824286603545434*^9, {3.824286764171322*^9, 
   3.824286792922592*^9}, {3.8242942884613857`*^9, 3.8242942940915337`*^9}, 
   3.824301120303957*^9, 3.8243013195140314`*^9, 3.8243014970908628`*^9},
 CellLabel->
  "Out[318]=",ExpressionUUID->"0bf07954-505f-41bf-8913-829ed1f35fea"],

Cell[BoxData["0.99938740133394468272747774138169392303`15."], "Output",
 CellChangeTimes->{
  3.8235987078072085`*^9, 3.823598884626149*^9, 3.8236001291289268`*^9, 
   3.8236001950031123`*^9, 3.8236012782496166`*^9, 3.8236013482973423`*^9, 
   3.823601421708125*^9, 3.823602359100505*^9, 3.823608580440733*^9, 
   3.823608865489473*^9, 3.823608937498292*^9, 3.823608985573349*^9, 
   3.8236091531372137`*^9, 3.8236092074871244`*^9, 3.823610116611586*^9, 
   3.8236102653021507`*^9, 3.823668004662719*^9, 3.823668047438329*^9, 
   3.8237631213839045`*^9, 3.823763156378615*^9, 3.823763201379573*^9, 
   3.823763257519101*^9, {3.8237633150052185`*^9, 3.823763324886893*^9}, 
   3.823763381737956*^9, 3.8237634217441125`*^9, 3.8237635292486467`*^9, 
   3.823763573455408*^9, 3.8237636320582323`*^9, 3.8237637374262543`*^9, 
   3.8237638089982257`*^9, 3.8237638586402073`*^9, 3.823764139604813*^9, 
   3.823764232380856*^9, 3.8237644154292345`*^9, 3.823765276439548*^9, 
   3.8237655770998125`*^9, 3.8237867400401683`*^9, 3.823799083134415*^9, 
   3.8237995034480658`*^9, 3.823799842864914*^9, 3.8238000671474*^9, 
   3.823800163272337*^9, 3.8238003587722397`*^9, 3.8238004212238483`*^9, 
   3.823800474655611*^9, 3.8238009213064885`*^9, 3.8238014168853226`*^9, 
   3.8238483646970854`*^9, 3.8238485917520084`*^9, 3.823864936313058*^9, 
   3.823865253442542*^9, 3.8238653402001944`*^9, 3.823878872824135*^9, 
   3.8239230302169333`*^9, 3.8239230964011984`*^9, 3.8239238826324916`*^9, 
   3.8239244203249283`*^9, 3.8239257238956347`*^9, 3.823925855906769*^9, 
   3.8239260296353197`*^9, 3.8239262451801434`*^9, 3.8239262996828637`*^9, 
   3.8239263666392956`*^9, 3.823927624636391*^9, 3.823927752023364*^9, 
   3.8239279943190575`*^9, 3.8239296408083353`*^9, 3.823930672658335*^9, 
   3.823931156162737*^9, 3.8242753269687667`*^9, 3.8242853121993637`*^9, {
   3.824285366096325*^9, 3.8242853750813913`*^9}, 3.824285900095173*^9, 
   3.8242861458548574`*^9, 3.824286603545434*^9, {3.824286764171322*^9, 
   3.824286792922592*^9}, {3.8242942884613857`*^9, 3.8242942940915337`*^9}, 
   3.824301120303957*^9, 3.8243013195140314`*^9, 3.8243015021457644`*^9},
 CellLabel->
  "Out[319]=",ExpressionUUID->"27dffc15-99cd-41e7-a6cb-411061a560ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ffunctions", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"fKL", ",", "fJS", ",", "fHellsquared", ",", "fTV"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"distributions", "=", 
   RowBox[{"{", 
    RowBox[{"Adensity", ",", "Bdensity", ",", "Cdensity", ",", "Ddensity"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cumdistributions", "=", 
   RowBox[{"{", 
    RowBox[{"Acum", ",", "Bcum", ",", "Ccum", ",", "Dcum"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listOfMatrices", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "4", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"WriteString", "[", 
  RowBox[{
  "\"\<stdout\>\"", ",", 
   "\"\<dist1,dist2,KL, JS, Helligner, Total Variation,Total variation \
altern., Wasserstein, Wasserstein without abs, \>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"j", "=", "0"}], ",", 
    RowBox[{"j", "<", "4"}], ",", 
    RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "0"}], ",", 
       RowBox[{"k", "<", "4"}], ",", 
       RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"distcurrent1", " ", "=", " ", 
         RowBox[{"distributions", "[", 
          RowBox[{"[", 
           RowBox[{"j", "+", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"distcurrent2", " ", "=", " ", 
         RowBox[{"distributions", "[", 
          RowBox[{"[", 
           RowBox[{"k", "+", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cumdistcurrent1", " ", "=", " ", 
         RowBox[{"cumdistributions", "[", 
          RowBox[{"[", 
           RowBox[{"j", "+", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cumdistcurrent2", " ", "=", " ", 
         RowBox[{"cumdistributions", "[", 
          RowBox[{"[", 
           RowBox[{"k", "+", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"WriteString", "[", 
         RowBox[{
         "\"\<stdout\>\"", ",", "\"\<\\n\>\"", ",", "distcurrent1", ",", " ", 
          "\"\<,\>\"", ",", " ", "distcurrent2", ",", " ", "\"\<,\>\""}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "0"}], ",", 
          RowBox[{"i", "<", "2"}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"fcurrent", " ", "=", " ", 
            RowBox[{"ffunctions", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"res", " ", "=", " ", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"Fdiv", "[", 
               RowBox[{"distcurrent1", ",", "distcurrent2", ",", "fcurrent"}],
                "]"}], ",", "0.001"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"listOfMatrices", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", "+", "1"}], ",", 
               RowBox[{"j", "+", "1"}], ",", 
               RowBox[{"k", "+", "1"}]}], "]"}], "]"}], " ", "=", "res"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"WriteString", "[", 
            RowBox[{"\"\<stdout\>\"", ",", " ", 
             RowBox[{"ToString", "[", "res", "]"}], ",", " ", "\"\<,\>\""}], 
            " ", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", "Helligner", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"fcurrent", " ", "=", " ", 
         RowBox[{"ffunctions", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"res", " ", "=", " ", 
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{"Fdiv", "[", 
             RowBox[{"distcurrent1", ",", "distcurrent2", ",", "fcurrent"}], 
             "]"}], "]"}], ",", " ", "0.001"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"listOfMatrices", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", 
            RowBox[{"j", "+", "1"}], ",", 
            RowBox[{"k", "+", "1"}]}], "]"}], "]"}], " ", "=", "res"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"WriteString", "[", 
         RowBox[{"\"\<stdout\>\"", ",", " ", 
          RowBox[{"ToString", "[", "res", "]"}], ",", " ", "\"\<,\>\""}], " ",
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", "TV", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"fcurrent", " ", "=", " ", 
         RowBox[{"ffunctions", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"res", " ", "=", " ", 
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"Fdiv", "[", 
            RowBox[{"distcurrent1", ",", "distcurrent2", ",", "fcurrent"}], 
            "]"}], ",", "0.001"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"listOfMatrices", "[", 
          RowBox[{"[", 
           RowBox[{"4", ",", 
            RowBox[{"j", "+", "1"}], ",", 
            RowBox[{"k", "+", "1"}]}], "]"}], "]"}], " ", "=", "res"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"WriteString", "[", 
         RowBox[{"\"\<stdout\>\"", ",", " ", 
          RowBox[{"ToString", "[", "res", "]"}], ",", " ", "\"\<,\>\""}], " ",
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"TV", " ", "alt"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"res", " ", "=", " ", 
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{"0.5", "*", 
              RowBox[{"Abs", "[", 
               RowBox[{
                RowBox[{"distcurrent1", "[", "x", "]"}], " ", "-", " ", 
                RowBox[{"distcurrent2", "[", "x", "]"}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "integralLowerX", ",", "integralUpperX"}], 
              "}"}], ",", " ", 
             RowBox[{"WorkingPrecision", "\[Rule]", "WorkingPrec"}], ",", " ", 
             RowBox[{"MaxRecursion", "\[Rule]", "MaxRec"}]}], "]"}], ",", 
           "0.001"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"WriteString", "[", 
         RowBox[{"\"\<stdout\>\"", ",", " ", 
          RowBox[{"ToString", "[", "res", "]"}], ",", " ", "\"\<,\>\""}], " ",
          "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"listOfMatrices", "[", 
          RowBox[{"[", 
           RowBox[{"5", ",", 
            RowBox[{"j", "+", "1"}], ",", 
            RowBox[{"k", "+", "1"}]}], "]"}], "]"}], " ", "=", " ", "res"}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", "Wasserstein", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"res", " ", "=", " ", 
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"cumdistcurrent1", "[", "x", "]"}], " ", "-", " ", 
               RowBox[{"cumdistcurrent2", "[", "x", "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "x", ",", " ", "integralLowerX", ",", "integralUpperX"}], "}"}],
              ",", " ", 
             RowBox[{"WorkingPrecision", "\[Rule]", "WorkingPrec"}], ",", " ", 
             RowBox[{"MaxRecursion", "\[Rule]", "MaxRec"}]}], "]"}], ",", " ",
            "0.001"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"listOfMatrices", "[", 
          RowBox[{"[", 
           RowBox[{"6", ",", 
            RowBox[{"j", "+", "1"}], ",", 
            RowBox[{"k", "+", "1"}]}], "]"}], "]"}], " ", "=", "res"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"WriteString", "[", 
         RowBox[{"\"\<stdout\>\"", ",", " ", 
          RowBox[{"ToString", "[", "res", "]"}], ",", "\"\<,\>\""}], "]"}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Wasserstein", " ", "without", " ", "abs"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"res", " ", "=", " ", 
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"cumdistcurrent1", "[", "x", "]"}], " ", "-", " ", 
              RowBox[{"cumdistcurrent2", "[", "x", "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{
              "x", ",", " ", "integralLowerX", ",", "integralUpperX"}], "}"}],
              ",", " ", 
             RowBox[{"WorkingPrecision", "\[Rule]", "WorkingPrec"}], ",", " ", 
             RowBox[{"MaxRecursion", "\[Rule]", "MaxRec"}]}], "]"}], ",", " ",
            "0.001"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"listOfMatrices", "[", 
          RowBox[{"[", 
           RowBox[{"7", ",", 
            RowBox[{"j", "+", "1"}], ",", 
            RowBox[{"k", "+", "1"}]}], "]"}], "]"}], " ", "=", "res"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"WriteString", "[", 
         RowBox[{"\"\<stdout\>\"", ",", " ", 
          RowBox[{"ToString", "[", "res", "]"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", " ", "7"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", " ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<KL\>\"", ",", " ", "\"\<JS\>\"", ",", " ", "\"\<Helligner\>\"", 
        ",", " ", "\"\<TV\>\"", ",", " ", "\"\<TV alt\>\"", ",", " ", 
        "\"\<Wasserstein\>\"", ",", "\"\<Wasserstein without abs\>\"", ",", 
        "\"\<Total variation-alternative computation\>\""}], "}"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{"listOfMatrices", "[", 
       RowBox[{"[", "i", "]"}], "]"}], " ", "//", " ", "MatrixForm"}], 
     "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.8235929545940676`*^9, 3.8235930535364447`*^9}, {
   3.823593472549551*^9, 3.823593679857006*^9}, {3.8235937167114267`*^9, 
   3.823593859383443*^9}, {3.8235939337882843`*^9, 3.823593941074808*^9}, 
   3.823596362013974*^9, {3.8235964965021267`*^9, 3.823596496830189*^9}, {
   3.823596649360679*^9, 3.8235966612195587`*^9}, {3.8235967100600357`*^9, 
   3.823596798922964*^9}, {3.823596871489502*^9, 3.823596876737194*^9}, {
   3.823596933269281*^9, 3.823596939244754*^9}, {3.823597004919281*^9, 
   3.823597007106307*^9}, {3.8235980454129987`*^9, 3.823598136557057*^9}, {
   3.8235981739359665`*^9, 3.8235983276004624`*^9}, 3.823598358461539*^9, {
   3.8235986114522552`*^9, 3.8235986282479167`*^9}, {3.8235989705991063`*^9, 
   3.8235989935095577`*^9}, {3.823599229867712*^9, 3.823599234926029*^9}, {
   3.823599898769512*^9, 3.8235999051132936`*^9}, 3.8236003233566647`*^9, {
   3.8236083990906687`*^9, 3.823608440266367*^9}, {3.823608475567974*^9, 
   3.8236085675760994`*^9}, {3.823608959612767*^9, 3.8236089749855843`*^9}, {
   3.823609089956297*^9, 3.823609148387973*^9}, {3.8236091916242113`*^9, 
   3.8236092008599787`*^9}, {3.823609326482578*^9, 3.8236093837884517`*^9}, {
   3.8236096536461706`*^9, 3.823609654088914*^9}, {3.8236680149507947`*^9, 
   3.823668019043003*^9}, {3.8237630730332975`*^9, 3.8237631154664216`*^9}, 
   3.8237632395646257`*^9, {3.823763524130735*^9, 3.823763552227556*^9}, {
   3.823763598458991*^9, 3.823763598779282*^9}, {3.823764642048859*^9, 
   3.823764735810941*^9}, {3.82376489573803*^9, 3.8237649282299557`*^9}, {
   3.8237650558166065`*^9, 3.823765266765413*^9}, {3.823765384876085*^9, 
   3.8237653946087055`*^9}, {3.823765513253729*^9, 3.8237655504525557`*^9}, {
   3.8238484128531656`*^9, 3.823848550178318*^9}, {3.8238496609551754`*^9, 
   3.8238497096790853`*^9}, {3.8238503160423064`*^9, 
   3.8238503172864532`*^9}, {3.8238637823607273`*^9, 3.823863785125741*^9}, {
   3.8238639438019485`*^9, 3.82386395338035*^9}, {3.8238639879426365`*^9, 
   3.8238639967003956`*^9}, {3.82386430556209*^9, 3.823864311757819*^9}, {
   3.8238644311920595`*^9, 3.823864456060145*^9}, {3.8238649114380856`*^9, 
   3.823864925427619*^9}, {3.823929519361212*^9, 3.823929628379897*^9}, {
   3.8239306611983566`*^9, 3.823930661593046*^9}, {3.824276067036542*^9, 
   3.8242760955626554`*^9}, {3.8242763515780687`*^9, 
   3.8242763557645144`*^9}, {3.824281521903411*^9, 3.824281524596012*^9}, {
   3.824281709831051*^9, 3.8242817717699795`*^9}, {3.8242818148611765`*^9, 
   3.824281815713106*^9}, {3.8242818628897686`*^9, 3.824281893963165*^9}, {
   3.8242819443912096`*^9, 3.8242820440168867`*^9}, {3.8242820772663765`*^9, 
   3.824282081711711*^9}, {3.8242869687994576`*^9, 3.8242869697505183`*^9}},
 CellLabel->
  "In[320]:=",ExpressionUUID->"e75c7464-648a-4884-a407-27a5478f038a"],

Cell[CellGroupData[{

Cell["\<\
dist1,dist2,KL, JS, Helligner, Total Variation,Total variation altern., \
Wasserstein, Wasserstein without abs, 
Adensity,Adensity,0.,0.,0.,0.,0.,0.,0.
Adensity,Bdensity,6.197,1.216,1.282,0.934,0.934,0.059,0.059
Adensity,Cdensity,28.59,1.385,1.412,0.999,0.999,0.034,0.034
Adensity,Ddensity,88.821,1.386,1.414,1.,1.,0.117,0.117
Bdensity,Adensity,15.407,1.216,1.282,0.934,0.934,0.059,-0.059
Bdensity,Bdensity,0.,0.,0.,0.,0.,0.,0.
Bdensity,Cdensity,15.405,1.216,1.282,0.934,0.934,0.04,-0.025
Bdensity,Ddensity,15.407,1.216,1.282,0.934,0.934,0.059,0.059
Cdensity,Adensity,29.425,1.385,1.412,0.999,0.999,0.034,-0.034
Cdensity,Bdensity,6.197,1.216,1.282,0.934,0.934,0.04,0.025
Cdensity,Cdensity,0.,0.,0.,0.,0.,0.,0.
Cdensity,Ddensity,2.646,0.831,0.986,0.818,0.818,0.083,0.083
Ddensity,Adensity,88.821,1.386,1.414,1.,1.,0.117,-0.117
Ddensity,Bdensity,6.197,1.216,1.282,0.934,0.934,0.059,-0.059
Ddensity,Cdensity,2.646,0.831,0.986,0.818,0.818,0.083,-0.083
Ddensity,Ddensity,0.,0.,0.,0.,0.,0.,0.\
\>", "Print",
 CellChangeTimes->{3.824286376797336*^9, 3.824286606933815*^9, 
  3.8242868028524427`*^9, 3.824286860720088*^9, 3.8242869726642237`*^9, 
  3.824288678655793*^9, 3.8242888835674057`*^9, 3.82428914498897*^9, 
  3.8242942985414248`*^9, 3.8242948644938655`*^9, 3.824300967397272*^9, 
  3.824301127314912*^9, 3.8243013251644278`*^9, 3.8243014202889137`*^9, 
  3.82430150607553*^9},
 CellLabel->
  "During evaluation of \
In[320]:=",ExpressionUUID->"a1174db8-32a3-4f14-878e-baab25b2420d"],

Cell[BoxData["\<\"KL\"\>"], "Print",
 CellChangeTimes->{3.824286376797336*^9, 3.824286606933815*^9, 
  3.8242868028524427`*^9, 3.824286860720088*^9, 3.8242869726642237`*^9, 
  3.824288678655793*^9, 3.8242888835674057`*^9, 3.82428914498897*^9, 
  3.8242942985414248`*^9, 3.8242948644938655`*^9, 3.824300967397272*^9, 
  3.824301127314912*^9, 3.8243013251644278`*^9, 3.8243014202889137`*^9, 
  3.824301625008217*^9},
 CellLabel->
  "During evaluation of \
In[320]:=",ExpressionUUID->"3f8493f2-d0e6-4092-b7ab-112f3a7541a7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "6.197`", "28.59`", "88.821`"},
     {"15.407`", "0.`", "15.405000000000001`", "15.407`"},
     {"29.425`", "6.197`", "0.`", "2.646`"},
     {"88.821`", "6.197`", "2.646`", "0.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.824286376797336*^9, 3.824286606933815*^9, 
  3.8242868028524427`*^9, 3.824286860720088*^9, 3.8242869726642237`*^9, 
  3.824288678655793*^9, 3.8242888835674057`*^9, 3.82428914498897*^9, 
  3.8242942985414248`*^9, 3.8242948644938655`*^9, 3.824300967397272*^9, 
  3.824301127314912*^9, 3.8243013251644278`*^9, 3.8243014202889137`*^9, 
  3.824301625014222*^9},
 CellLabel->
  "During evaluation of \
In[320]:=",ExpressionUUID->"33d1f36b-3262-43ce-8316-63535e0918e9"],

Cell[BoxData["\<\"JS\"\>"], "Print",
 CellChangeTimes->{3.824286376797336*^9, 3.824286606933815*^9, 
  3.8242868028524427`*^9, 3.824286860720088*^9, 3.8242869726642237`*^9, 
  3.824288678655793*^9, 3.8242888835674057`*^9, 3.82428914498897*^9, 
  3.8242942985414248`*^9, 3.8242948644938655`*^9, 3.824300967397272*^9, 
  3.824301127314912*^9, 3.8243013251644278`*^9, 3.8243014202889137`*^9, 
  3.8243016250172253`*^9},
 CellLabel->
  "During evaluation of \
In[320]:=",ExpressionUUID->"d3b6fc0a-8151-4002-b1bf-5b2fd5a16b51"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "1.216`", "1.385`", "1.3860000000000001`"},
     {"1.216`", "0.`", "1.216`", "1.216`"},
     {"1.385`", "1.216`", "0.`", "0.8310000000000001`"},
     {"1.3860000000000001`", "1.216`", "0.8310000000000001`", "0.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.824286376797336*^9, 3.824286606933815*^9, 
  3.8242868028524427`*^9, 3.824286860720088*^9, 3.8242869726642237`*^9, 
  3.824288678655793*^9, 3.8242888835674057`*^9, 3.82428914498897*^9, 
  3.8242942985414248`*^9, 3.8242948644938655`*^9, 3.824300967397272*^9, 
  3.824301127314912*^9, 3.8243013251644278`*^9, 3.8243014202889137`*^9, 
  3.8243016250198674`*^9},
 CellLabel->
  "During evaluation of \
In[320]:=",ExpressionUUID->"27535788-ffd5-464a-99aa-208122369c62"],

Cell[BoxData["\<\"Helligner\"\>"], "Print",
 CellChangeTimes->{3.824286376797336*^9, 3.824286606933815*^9, 
  3.8242868028524427`*^9, 3.824286860720088*^9, 3.8242869726642237`*^9, 
  3.824288678655793*^9, 3.8242888835674057`*^9, 3.82428914498897*^9, 
  3.8242942985414248`*^9, 3.8242948644938655`*^9, 3.824300967397272*^9, 
  3.824301127314912*^9, 3.8243013251644278`*^9, 3.8243014202889137`*^9, 
  3.8243016250228796`*^9},
 CellLabel->
  "During evaluation of \
In[320]:=",ExpressionUUID->"e151bbd5-aa5d-44f9-a15e-743138d3f0ce"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "1.282`", "1.412`", "1.414`"},
     {"1.282`", "0.`", "1.282`", "1.282`"},
     {"1.412`", "1.282`", "0.`", "0.986`"},
     {"1.414`", "1.282`", "0.986`", "0.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.824286376797336*^9, 3.824286606933815*^9, 
  3.8242868028524427`*^9, 3.824286860720088*^9, 3.8242869726642237`*^9, 
  3.824288678655793*^9, 3.8242888835674057`*^9, 3.82428914498897*^9, 
  3.8242942985414248`*^9, 3.8242948644938655`*^9, 3.824300967397272*^9, 
  3.824301127314912*^9, 3.8243013251644278`*^9, 3.8243014202889137`*^9, 
  3.8243016250248723`*^9},
 CellLabel->
  "During evaluation of \
In[320]:=",ExpressionUUID->"15c678a0-952d-435c-999c-07a0fa85eff9"],

Cell[BoxData["\<\"TV\"\>"], "Print",
 CellChangeTimes->{3.824286376797336*^9, 3.824286606933815*^9, 
  3.8242868028524427`*^9, 3.824286860720088*^9, 3.8242869726642237`*^9, 
  3.824288678655793*^9, 3.8242888835674057`*^9, 3.82428914498897*^9, 
  3.8242942985414248`*^9, 3.8242948644938655`*^9, 3.824300967397272*^9, 
  3.824301127314912*^9, 3.8243013251644278`*^9, 3.8243014202889137`*^9, 
  3.8243016250288763`*^9},
 CellLabel->
  "During evaluation of \
In[320]:=",ExpressionUUID->"a79ed9e0-6415-4139-a59c-1515f2630814"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "0.934`", "0.999`", "1.`"},
     {"0.934`", "0.`", "0.934`", "0.934`"},
     {"0.999`", "0.934`", "0.`", "0.8180000000000001`"},
     {"1.`", "0.934`", "0.8180000000000001`", "0.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.824286376797336*^9, 3.824286606933815*^9, 
  3.8242868028524427`*^9, 3.824286860720088*^9, 3.8242869726642237`*^9, 
  3.824288678655793*^9, 3.8242888835674057`*^9, 3.82428914498897*^9, 
  3.8242942985414248`*^9, 3.8242948644938655`*^9, 3.824300967397272*^9, 
  3.824301127314912*^9, 3.8243013251644278`*^9, 3.8243014202889137`*^9, 
  3.8243016250318785`*^9},
 CellLabel->
  "During evaluation of \
In[320]:=",ExpressionUUID->"dc8c4214-ae98-4f33-97f2-e3d90554efa9"],

Cell[BoxData["\<\"TV alt\"\>"], "Print",
 CellChangeTimes->{3.824286376797336*^9, 3.824286606933815*^9, 
  3.8242868028524427`*^9, 3.824286860720088*^9, 3.8242869726642237`*^9, 
  3.824288678655793*^9, 3.8242888835674057`*^9, 3.82428914498897*^9, 
  3.8242942985414248`*^9, 3.8242948644938655`*^9, 3.824300967397272*^9, 
  3.824301127314912*^9, 3.8243013251644278`*^9, 3.8243014202889137`*^9, 
  3.82430162503489*^9},
 CellLabel->
  "During evaluation of \
In[320]:=",ExpressionUUID->"cb4eeeeb-c693-4dd3-b2cd-4012ab0afc7d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "0.934`", "0.999`", "1.`"},
     {"0.934`", "0.`", "0.934`", "0.934`"},
     {"0.999`", "0.934`", "0.`", "0.8180000000000001`"},
     {"1.`", "0.934`", "0.8180000000000001`", "0.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.824286376797336*^9, 3.824286606933815*^9, 
  3.8242868028524427`*^9, 3.824286860720088*^9, 3.8242869726642237`*^9, 
  3.824288678655793*^9, 3.8242888835674057`*^9, 3.82428914498897*^9, 
  3.8242942985414248`*^9, 3.8242948644938655`*^9, 3.824300967397272*^9, 
  3.824301127314912*^9, 3.8243013251644278`*^9, 3.8243014202889137`*^9, 
  3.8243016250381284`*^9},
 CellLabel->
  "During evaluation of \
In[320]:=",ExpressionUUID->"938c259a-41d1-43b0-9b6b-38df2fe76d6f"],

Cell[BoxData["\<\"Wasserstein\"\>"], "Print",
 CellChangeTimes->{3.824286376797336*^9, 3.824286606933815*^9, 
  3.8242868028524427`*^9, 3.824286860720088*^9, 3.8242869726642237`*^9, 
  3.824288678655793*^9, 3.8242888835674057`*^9, 3.82428914498897*^9, 
  3.8242942985414248`*^9, 3.8242948644938655`*^9, 3.824300967397272*^9, 
  3.824301127314912*^9, 3.8243013251644278`*^9, 3.8243014202889137`*^9, 
  3.824301625040139*^9},
 CellLabel->
  "During evaluation of \
In[320]:=",ExpressionUUID->"0fd22a62-61e7-4131-b174-5ced963d9826"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "0.059000000000000004`", "0.034`", "0.117`"},
     {"0.059000000000000004`", "0.`", "0.04`", "0.059000000000000004`"},
     {"0.034`", "0.04`", "0.`", "0.083`"},
     {"0.117`", "0.059000000000000004`", "0.083`", "0.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.824286376797336*^9, 3.824286606933815*^9, 
  3.8242868028524427`*^9, 3.824286860720088*^9, 3.8242869726642237`*^9, 
  3.824288678655793*^9, 3.8242888835674057`*^9, 3.82428914498897*^9, 
  3.8242942985414248`*^9, 3.8242948644938655`*^9, 3.824300967397272*^9, 
  3.824301127314912*^9, 3.8243013251644278`*^9, 3.8243014202889137`*^9, 
  3.8243016250431323`*^9},
 CellLabel->
  "During evaluation of \
In[320]:=",ExpressionUUID->"cc69f4a3-043d-40e8-a870-859ac801212a"],

Cell[BoxData["\<\"Wasserstein without abs\"\>"], "Print",
 CellChangeTimes->{3.824286376797336*^9, 3.824286606933815*^9, 
  3.8242868028524427`*^9, 3.824286860720088*^9, 3.8242869726642237`*^9, 
  3.824288678655793*^9, 3.8242888835674057`*^9, 3.82428914498897*^9, 
  3.8242942985414248`*^9, 3.8242948644938655`*^9, 3.824300967397272*^9, 
  3.824301127314912*^9, 3.8243013251644278`*^9, 3.8243014202889137`*^9, 
  3.824301625046136*^9},
 CellLabel->
  "During evaluation of \
In[320]:=",ExpressionUUID->"1ad092ac-f9ac-416e-8fa6-0d56251f122c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "0.059000000000000004`", "0.034`", "0.117`"},
     {
      RowBox[{"-", "0.059000000000000004`"}], "0.`", 
      RowBox[{"-", "0.025`"}], "0.059000000000000004`"},
     {
      RowBox[{"-", "0.034`"}], "0.025`", "0.`", "0.083`"},
     {
      RowBox[{"-", "0.117`"}], 
      RowBox[{"-", "0.059000000000000004`"}], 
      RowBox[{"-", "0.083`"}], "0.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.824286376797336*^9, 3.824286606933815*^9, 
  3.8242868028524427`*^9, 3.824286860720088*^9, 3.8242869726642237`*^9, 
  3.824288678655793*^9, 3.8242888835674057`*^9, 3.82428914498897*^9, 
  3.8242942985414248`*^9, 3.8242948644938655`*^9, 3.824300967397272*^9, 
  3.824301127314912*^9, 3.8243013251644278`*^9, 3.8243014202889137`*^9, 
  3.824301625053725*^9},
 CellLabel->
  "During evaluation of \
In[320]:=",ExpressionUUID->"4249f4b6-c8f2-4b25-9292-9ec690927822"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1007},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PageSize"->{595.3199999999999, 841.92},
"PaperOrientation"->"Portrait",
"PaperSize"->{595.3199999999999, 841.92}},
TaggingRules->{"TryRealOnly" -> False},
Magnification:>1.3 Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 9, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"24e11f6c-3898-44bf-b8d2-9d7393ef79ff"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 756, 17, 163, "Input",ExpressionUUID->"725fbfd1-f8e3-47b3-ab3f-b573d23d8b14"],
Cell[1317, 39, 745, 14, 113, "Input",ExpressionUUID->"61d63873-500c-49e8-a66c-e90fdb9c34d7"],
Cell[2065, 55, 179, 3, 63, "Input",ExpressionUUID->"70de4438-b064-4654-8dc4-73f47fd5b8b2"],
Cell[2247, 60, 3201, 71, 188, "Input",ExpressionUUID->"5de76da4-4da8-40d5-99f2-8f13700d6529"],
Cell[5451, 133, 194, 3, 63, "Input",ExpressionUUID->"34ebe90e-6de6-4b98-ac3d-6cef444570ec"],
Cell[5648, 138, 454, 7, 37, "Input",ExpressionUUID->"2a5871fe-d581-4c86-85cb-f0cdac74cd22"],
Cell[6105, 147, 5332, 140, 513, "Input",ExpressionUUID->"45ab569f-e364-42e6-a3ab-2568acf6f9d0"],
Cell[11440, 289, 10050, 223, 638, "Input",ExpressionUUID->"8c4f10d7-ad82-41a7-85bc-8286cb598394"],
Cell[21493, 514, 288, 7, 37, "Input",ExpressionUUID->"5f8e94d7-a592-4389-a87b-cddf6d57458f"],
Cell[CellGroupData[{
Cell[21806, 525, 5647, 143, 663, "Input",ExpressionUUID->"13ec1acb-c98f-4fa0-b09e-70265fdcfdc4"],
Cell[27456, 670, 73693, 1304, 301, "Output",ExpressionUUID->"1c23e45f-9db2-4bb5-811a-02f97a6ea60f"]
}, Open  ]],
Cell[101164, 1977, 7267, 185, 838, "Input",ExpressionUUID->"91c36bff-44b5-4137-8ef1-3ea30884c18d"],
Cell[108434, 2164, 6700, 173, 838, "Input",ExpressionUUID->"3a86c19a-fe7a-4b68-9017-50cde1374fa3"],
Cell[115137, 2339, 6599, 177, 763, "Input",ExpressionUUID->"9fd7702c-fb4a-4cd7-9ece-558e637e2898"],
Cell[CellGroupData[{
Cell[121761, 2520, 2383, 45, 63, "Input",ExpressionUUID->"4dc805e7-2262-47b0-944a-93e28424c905"],
Cell[124147, 2567, 127110, 2166, 307, "Output",ExpressionUUID->"f8dc0fad-1e47-4d3b-b0bf-3c35da71090f"],
Cell[251260, 4735, 4607, 63, 43, "Output",ExpressionUUID->"cef8008b-efd2-4200-91ef-9bb78bd9ad98"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255904, 4803, 1557, 33, 63, "Input",ExpressionUUID->"40bc57e6-f7c3-4335-900c-019d06c5651e"],
Cell[257464, 4838, 81696, 1428, 301, "Output",ExpressionUUID->"e0431505-c5ef-4067-85f1-3a546421f078"],
Cell[339163, 6268, 2799, 39, 43, "Output",ExpressionUUID->"2168c180-3a90-459e-ae49-48600ae13725"]
}, Open  ]],
Cell[341977, 6310, 1337, 34, 113, "Input",ExpressionUUID->"e358175c-e1cb-43c4-8625-48f1658670d6"],
Cell[CellGroupData[{
Cell[343339, 6348, 609, 12, 88, "Input",ExpressionUUID->"e2fa4b6b-bfe4-4dd2-b551-c5c710347db9"],
Cell[343951, 6362, 2231, 31, 43, "Output",ExpressionUUID->"0bf07954-505f-41bf-8913-829ed1f35fea"],
Cell[346185, 6395, 2231, 31, 43, "Output",ExpressionUUID->"27dffc15-99cd-41e7-a6cb-411061a560ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[348453, 6431, 13378, 285, 1263, "Input",ExpressionUUID->"e75c7464-648a-4884-a407-27a5478f038a"],
Cell[CellGroupData[{
Cell[361856, 6720, 1494, 28, 354, "Print",ExpressionUUID->"a1174db8-32a3-4f14-878e-baab25b2420d"],
Cell[363353, 6750, 520, 9, 29, "Print",ExpressionUUID->"3f8493f2-d0e6-4092-b7ab-112f3a7541a7"],
Cell[363876, 6761, 1125, 26, 86, "Print",ExpressionUUID->"33d1f36b-3262-43ce-8316-63535e0918e9"],
Cell[365004, 6789, 522, 9, 29, "Print",ExpressionUUID->"d3b6fc0a-8151-4002-b1bf-5b2fd5a16b51"],
Cell[365529, 6800, 1161, 26, 86, "Print",ExpressionUUID->"27535788-ffd5-464a-99aa-208122369c62"],
Cell[366693, 6828, 529, 9, 29, "Print",ExpressionUUID->"e151bbd5-aa5d-44f9-a15e-743138d3f0ce"],
Cell[367225, 6839, 1109, 26, 86, "Print",ExpressionUUID->"15c678a0-952d-435c-999c-07a0fa85eff9"],
Cell[368337, 6867, 522, 9, 29, "Print",ExpressionUUID->"a79ed9e0-6415-4139-a59c-1515f2630814"],
Cell[368862, 6878, 1129, 26, 86, "Print",ExpressionUUID->"dc8c4214-ae98-4f33-97f2-e3d90554efa9"],
Cell[369994, 6906, 523, 9, 29, "Print",ExpressionUUID->"cb4eeeeb-c693-4dd3-b2cd-4012ab0afc7d"],
Cell[370520, 6917, 1129, 26, 86, "Print",ExpressionUUID->"938c259a-41d1-43b0-9b6b-38df2fe76d6f"],
Cell[371652, 6945, 529, 9, 29, "Print",ExpressionUUID->"0fd22a62-61e7-4131-b174-5ced963d9826"],
Cell[372184, 6956, 1167, 26, 86, "Print",ExpressionUUID->"cc69f4a3-043d-40e8-a870-859ac801212a"],
Cell[373354, 6984, 541, 9, 29, "Print",ExpressionUUID->"1ad092ac-f9ac-416e-8fa6-0d56251f122c"],
Cell[373898, 6995, 1299, 32, 86, "Print",ExpressionUUID->"4249f4b6-c8f2-4b25-9292-9ec690927822"]
}, Open  ]]
}, Open  ]]
}
]
*)

